// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Auth.Flap Flap 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 50,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "position": "relative",
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      >
        <View
          bgColor="white"
          height={null}
          midHeight={true}
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
                "borderColor": "#e6e6e6",
                "borderStyle": "solid",
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "borderWidth": 1,
                "height": "auto",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
              Object {
                "height": 50,
                "width": 164.62,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
              "borderTopColor": "#e6e6e6",
              "borderTopWidth": 1,
              "height": 20,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 30,
            },
          ]
        }
      />
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "textAlign": "center",
              "top": 20,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
              },
              Object {
                "width": 161.62,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "center",
              }
            }
          >
            I'm the title
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Auth.LoginEmailForm LoginEmailForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Auth.SignupEmailForm SignupEmailForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Backgrounds.FieldBackground FieldBackground 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#009f36",
                "left": 0,
                "position": "absolute",
                "top": 0,
              },
            ]
          }
        >
          <RNSVGSvgView
            bbHeight="1334"
            bbWidth="750"
            height={1334}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                undefined,
                false,
                Object {
                  "flex": 0,
                  "height": 1334,
                  "width": 750,
                },
              ]
            }
            width={750}
          >
            <RNSVGGroup
              fill={
                Array [
                  0,
                  0,
                  0,
                  0,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              font={Object {}}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={Array []}
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            >
              <RNSVGPath
                d="M150 0 h 60 L 120 1334 h -90 Z"
                fill={
                  Array [
                    0,
                    1,
                    1,
                    1,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              />
              <RNSVGPath
                d="M0 0 h 750 v 667 L 0 889.3333333333333 Z"
                fill={
                  Array [
                    0,
                    0,
                    0.20784313725490197,
                    0.22745098039215686,
                    0.84,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={0.84}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          alignItems="center"
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="88"
            bbWidth="88"
            height={88}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                undefined,
                false,
                Object {
                  "flex": 0,
                  "height": 88,
                  "width": 88,
                },
              ]
            }
            vbHeight={79}
            vbWidth={79}
            version="1.1"
            width={88}
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={
                Array [
                  0,
                  0,
                  0,
                  0,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              font={Object {}}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={Array []}
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            >
              <RNSVGGroup
                fill={null}
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                name="Onboarding"
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "stroke",
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              >
                <RNSVGPath
                  d="M4.8,8.21565038e-15 L74.2,8.21565038e-15 C76.8509668,7.72867568e-15 79,2.1490332 79,4.8 L79,74.2 C79,76.8509668 76.8509668,79 74.2,79 L4.8,79 C2.1490332,79 -2.33988546e-15,76.8509668 -2.66453526e-15,74.2 L0,4.8 C-3.24649801e-16,2.1490332 2.1490332,6.03808982e-15 4.8,5.55111512e-15 Z"
                  fill={
                    Array [
                      0,
                      0.027450980392156862,
                      0.8392156862745098,
                      0.32941176470588235,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-6"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M14 11 65 11 65 68 14 68z"
                  fill={
                    Array [
                      0,
                      1,
                      1,
                      1,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M0 45 53 45 53 56 0 56z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-5"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M26 22 79 22 79 33 26 33z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-4"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M0 11 14 11 14 68 0 68z"
                  fill={
                    Array [
                      0,
                      0.16862745098039217,
                      0.6588235294117647,
                      0.2901960784313726,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-2"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M65 11 79 11 79 68 65 68z"
                  fill={
                    Array [
                      0,
                      0.16862745098039217,
                      0.6588235294117647,
                      0.2901960784313726,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-2-Copy-2"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M0 68 79 68 79 79 0 79z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-2"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M14 8.21565038e-15 65 8.21565038e-15 65 11 14 11z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M14 68 65 68 65 79 14 79z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-3"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <Text>
            contents
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Backgrounds.ImageBackground ImageBackground Children 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={56}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 56,
              "width": "auto",
            },
          ]
        }
      />
      <View>
        <Text>
          Hello, I'm the child
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Backgrounds.ImageBackground ImageBackground Title Text 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={56}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 56,
              "width": "auto",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "marginBottom": 0,
              "marginLeft": "auto",
              "marginRight": "auto",
              "marginTop": 0,
              "maxWidth": 280,
              "width": "100%",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "center",
            }
          }
        >
          I'm the title
        </Text>
        <View
          pixels={24}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 24,
                "width": "auto",
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "center",
            }
          }
        >
          I'm the text
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Backgrounds.LogoHeaderBackground LogoHeaderBackground green theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      isWhiteTheme={false}
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <RCTScrollView>
        <View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            alignItems="center"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="88"
              bbWidth="88"
              height={88}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  false,
                  Object {
                    "flex": 0,
                    "height": 88,
                    "width": 88,
                  },
                ]
              }
              vbHeight={79}
              vbWidth={79}
              version="1.1"
              width={88}
              xmlns="http://www.w3.org/2000/svg"
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    0,
                    0,
                    0,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Onboarding"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "stroke",
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M4.8,8.21565038e-15 L74.2,8.21565038e-15 C76.8509668,7.72867568e-15 79,2.1490332 79,4.8 L79,74.2 C79,76.8509668 76.8509668,79 74.2,79 L4.8,79 C2.1490332,79 -2.33988546e-15,76.8509668 -2.66453526e-15,74.2 L0,4.8 C-3.24649801e-16,2.1490332 2.1490332,6.03808982e-15 4.8,5.55111512e-15 Z"
                    fill={
                      Array [
                        0,
                        0.027450980392156862,
                        0.8392156862745098,
                        0.32941176470588235,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-6"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 11 65 11 65 68 14 68z"
                    fill={
                      Array [
                        0,
                        1,
                        1,
                        1,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 45 53 45 53 56 0 56z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-5"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M26 22 79 22 79 33 26 33z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-4"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 11 14 11 14 68 0 68z"
                    fill={
                      Array [
                        0,
                        0.16862745098039217,
                        0.6588235294117647,
                        0.2901960784313726,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M65 11 79 11 79 68 65 68z"
                    fill={
                      Array [
                        0,
                        0.16862745098039217,
                        0.6588235294117647,
                        0.2901960784313726,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-2-Copy-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 68 79 68 79 79 0 79z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 8.21565038e-15 65 8.21565038e-15 65 11 14 11z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 68 65 68 65 79 14 79z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-3"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              pixels={16}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 16,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-Bold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "left",
                }
              }
            >
              SPORTYSPOTS
            </Text>
          </View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <Text>
            contents
          </Text>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Backgrounds.LogoHeaderBackground LogoHeaderBackground white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      isWhiteTheme={true}
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <RCTScrollView>
        <View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            alignItems="center"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="88"
              bbWidth="88"
              height={88}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  false,
                  Object {
                    "flex": 0,
                    "height": 88,
                    "width": 88,
                  },
                ]
              }
              vbHeight={79}
              vbWidth={79}
              version="1.1"
              width={88}
              xmlns="http://www.w3.org/2000/svg"
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    0,
                    0,
                    0,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Onboarding"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "stroke",
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M4.8,8.21565038e-15 L74.2,8.21565038e-15 C76.8509668,7.72867568e-15 79,2.1490332 79,4.8 L79,74.2 C79,76.8509668 76.8509668,79 74.2,79 L4.8,79 C2.1490332,79 -2.33988546e-15,76.8509668 -2.66453526e-15,74.2 L0,4.8 C-3.24649801e-16,2.1490332 2.1490332,6.03808982e-15 4.8,5.55111512e-15 Z"
                    fill={
                      Array [
                        0,
                        0.027450980392156862,
                        0.8392156862745098,
                        0.32941176470588235,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-6"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 11 65 11 65 68 14 68z"
                    fill={
                      Array [
                        0,
                        1,
                        1,
                        1,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 45 53 45 53 56 0 56z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-5"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M26 22 79 22 79 33 26 33z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-4"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 11 14 11 14 68 0 68z"
                    fill={
                      Array [
                        0,
                        0.16862745098039217,
                        0.6588235294117647,
                        0.2901960784313726,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M65 11 79 11 79 68 65 68z"
                    fill={
                      Array [
                        0,
                        0.16862745098039217,
                        0.6588235294117647,
                        0.2901960784313726,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-2-Copy-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 68 79 68 79 79 0 79z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 8.21565038e-15 65 8.21565038e-15 65 11 14 11z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 68 65 68 65 79 14 79z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-3"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              pixels={16}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 16,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-Bold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "left",
                }
              }
            >
              SPORTYSPOTS
            </Text>
          </View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <Text>
            contents
          </Text>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.AlertMsg AlertMsg error 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="negative20"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(224, 48, 30, 0.2)",
            "borderRadius": 4,
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#E0301E",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#E0301E",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            This is an alert component!
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.AlertMsg AlertMsg info 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="info20"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(1, 154, 232, 0.2)",
            "borderRadius": 4,
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#019AE8",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#019AE8",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            This is an alert component!
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.AlertMsg AlertMsg info long text 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="info20"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(1, 154, 232, 0.2)",
            "borderRadius": 4,
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#019AE8",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#019AE8",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            This is an alert component! This is an alert component! This is an alert component! This is an alert component! This is an alert component!
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.AlertMsg AlertMsg success 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="grass20"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0, 159, 54, 0.2)",
            "borderRadius": 4,
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#009f36",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            This is an alert component!
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.AlertMsg AlertMsg warning 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="notify20"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(245, 166, 35, 0.2)",
            "borderRadius": 4,
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#f5a623",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#f5a623",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            This is an alert component!
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Avatar Avatar no props size S 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      size="S"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0,0,0,0)",
            "borderRadius": 40,
            "flexDirection": "column",
            "height": 40,
            "justifyContent": "center",
            "overflow": "hidden",
            "width": 40,
          },
        ]
      }
    >
      <Image
        size="S"
        style={
          Array [
            Object {
              "height": 40,
              "width": 40,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Avatar Avatar with TEXT size L 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      size="L"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#009f36",
            "borderRadius": 80,
            "flexDirection": "column",
            "height": 80,
            "justifyContent": "center",
            "overflow": "hidden",
            "width": 80,
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "color": "#fff",
            "fontFamily": "Rajdhani-SemiBold",
            "fontSize": 32,
            "lineHeight": 48,
            "textAlign": "center",
          }
        }
      >
        FR
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Avatar Avatar with USER 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.AvatarPicker AvatarPicker with USER 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Block Block 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="grass"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text>
        I'm inside a Block :)
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Block Block 100px fixed height 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="grass"
      height={100}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": 100,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text>
        I'm inside a Block :)
      </Text>
      <Text>
        with fixed height
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Block Block 100px fixed height bgColor gray 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="gray"
      height={100}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#777",
            "height": 100,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text>
        I'm inside a Block :)
      </Text>
      <Text>
        with fixed height
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Calendar Calendar 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <Text>
        
      </Text>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "paddingLeft": 5,
              "paddingRight": 5,
            },
            Object {},
          ]
        }
      >
        <View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingLeft": 10,
                "paddingRight": 10,
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 20,
                  "left": 20,
                  "right": 20,
                  "top": 20,
                }
              }
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                  "padding": 10,
                }
              }
              testID="native.calendar.CHANGE_MONTH_LEFT_ARROW"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#979797",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                accessibilityTraits="header"
                allowFontScaling={false}
                style={
                  Object {
                    "color": "#2d4150",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": "300",
                    "margin": 10,
                  }
                }
              >
                January 2017
              </Text>
            </View>
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 20,
                  "left": 20,
                  "right": 20,
                  "top": 20,
                }
              }
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                  "padding": 10,
                }
              }
              testID="native.calendar.CHANGE_MONTH_RIGHT_ARROW"
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#979797",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginTop": 7,
              }
            }
          >
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Sun
            </Text>
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Mon
            </Text>
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Tue
            </Text>
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Wed
            </Text>
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Thu
            </Text>
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Fri
            </Text>
            <Text
              accessible={false}
              allowFontScaling={false}
              importantForAccessibility="no"
              numberOfLines={1}
              style={
                Object {
                  "color": "#b6c1cd",
                  "fontFamily": "System",
                  "fontSize": 13,
                  "marginBottom": 7,
                  "marginTop": 2,
                  "textAlign": "center",
                  "width": 32,
                }
              }
            >
              Sat
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 7,
                "marginTop": 7,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  1
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  2
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  3
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  4
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  5
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  6
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  7
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 7,
                "marginTop": 7,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  8
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  9
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  10
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  11
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  12
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  13
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  14
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 7,
                "marginTop": 7,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  15
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  16
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  17
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  18
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  19
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  20
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  21
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 7,
                "marginTop": 7,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  22
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  23
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  24
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  25
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  26
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  27
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  28
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "space-around",
                "marginBottom": 7,
                "marginTop": 7,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  29
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  30
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "height": 32,
                    "opacity": 1,
                    "width": 32,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0)",
                        "color": "#2d4150",
                        "fontFamily": "System",
                        "fontSize": 16,
                        "fontWeight": "300",
                        "marginTop": 6,
                      },
                    ]
                  }
                >
                  31
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            />
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            />
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            />
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.CapacityPicker CapacityPicker 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              2
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              4
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              6
            </Text>
          </View>
        </View>
      </View>
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              9
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              10
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              12
            </Text>
          </View>
        </View>
      </View>
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              14
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              16
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            bgColor="white"
            borderColor="darkGray"
            disabled={false}
            justifyContent="center"
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderColor": "#979797",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "row",
                  "height": 48,
                  "justifyContent": "center",
                  "minWidth": 80,
                  "width": 80,
                },
              ]
            }
            width={80}
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              22
            </Text>
          </View>
        </View>
      </View>
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <View
        alignItems="center"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pixels={16}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 16,
              },
            ]
          }
        />
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="capacityMinus"
        >
          <View
            bgColor="black"
            borderColor="black"
            disabled={false}
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#000",
                  "borderColor": "#000",
                  "borderRadius": 40,
                  "borderStyle": "solid",
                  "borderWidth": 0.3,
                  "height": 40,
                  "justifyContent": "center",
                  "width": 40,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "flexGrow": 1,
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 40,
              "lineHeight": 60,
              "textAlign": "center",
            }
          }
        >
          0
        </Text>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="capacityPlus"
        >
          <View
            bgColor="black"
            borderColor="black"
            disabled={false}
            size="M"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#000",
                  "borderColor": "#000",
                  "borderRadius": 40,
                  "borderStyle": "solid",
                  "borderWidth": 0.3,
                  "height": 40,
                  "justifyContent": "center",
                  "width": 40,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          pixels={16}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 16,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 80,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField fullWidth size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="none"
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="auto"
              style={
                Object {
                  "width": 80,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                    "borderBottomWidth": 1,
                    "height": 65,
                    "paddingBottom": 14,
                    "paddingTop": 27,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                      "top": 31,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 16,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCapitalize="sentences"
                    autoFocus={false}
                    disableFullscreenUI={true}
                    editable={true}
                    error=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    onFocus={[Function]}
                    selectionColor="#fff"
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "margin": 0,
                          "padding": 0,
                          "top": 2,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                          "fontSize": 16,
                          "height": 24,
                          "textAlign": "left",
                        },
                        Object {
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "fontWeight": "normal",
                          "marginTop": 8,
                          "paddingHorizontal": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value=""
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "height": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontSize": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 12,
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 80,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(200, 0, 0, 0.8)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error="I'm the error"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  >
                    I'm the error
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.CenteredActivityIndicator CenteredActivityIndicator 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#009f36"
        hidesWhenStopped={true}
        size="large"
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Checkbox Checkbox 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "green",
            "borderColor": "black",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 180,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 48,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Checkbox Checkbox white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "green",
            "borderColor": "black",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 180,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 48,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.ConnectionCheck ConnectionCheck 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "green",
          "flex": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        Disconnect internet connection or set phone on flying mode!
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DatePickerField DatePickerField 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 368,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="datePickerField.defaultValue"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DatePickerField DatePickerField fullWidth size ML dateFormat DD/MM/YYYY 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="datePickerField.defaultValue"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DatePickerField DatePickerField white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="none"
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="auto"
              style={
                Object {
                  "width": 368,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                    "borderBottomWidth": 1,
                    "height": 65,
                    "paddingBottom": 14,
                    "paddingTop": 27,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                      "top": 5,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCapitalize="sentences"
                    autoFocus={false}
                    disableFullscreenUI={true}
                    editable={true}
                    error=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    onFocus={[Function]}
                    selectionColor="#fff"
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "margin": 0,
                          "padding": 0,
                          "top": 2,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                          "fontSize": 16,
                          "height": 24,
                          "textAlign": "left",
                        },
                        Object {
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "fontWeight": "normal",
                          "marginTop": 8,
                          "paddingHorizontal": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="datePickerField.defaultValue"
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "height": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontSize": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 12,
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Divider Divider 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <Text>
        Above
      </Text>
      <View
        row={false}
        style={
          Array [
            Object {
              "borderBottomColor": "#e6e6e6",
              "borderBottomWidth": 1,
              "borderRightColor": "rgba(0,0,0,0)",
              "borderRightWidth": 0,
            },
          ]
        }
      />
      <Text>
        Below
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Divider Divider row 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <Text>
        Left
      </Text>
      <View
        row={true}
        style={
          Array [
            Object {
              "borderBottomColor": "rgba(0,0,0,0)",
              "borderBottomWidth": 0,
              "borderRightColor": "#e6e6e6",
              "borderRightWidth": 1,
            },
          ]
        }
      />
      <Text>
        Right
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DotSpacer DotSpacer default size M 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <Text>
        Left size
      </Text>
      <View
        size="M"
        style={
          Array [
            Object {
              "marginHorizontal": 8,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#BDBDBD",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          ·
        </Text>
      </View>
      <Text>
        Right size
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DotSpacer DotSpacer size L 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <Text>
        Left size
      </Text>
      <View
        size="L"
        style={
          Array [
            Object {
              "marginHorizontal": 16,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#BDBDBD",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          ·
        </Text>
      </View>
      <Text>
        Right size
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DotSpacer DotSpacer size S 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <Text>
        Left size
      </Text>
      <View
        size="S"
        style={
          Array [
            Object {
              "marginHorizontal": 4,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#BDBDBD",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          ·
        </Text>
      </View>
      <Text>
        Right size
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Dropdown Dropdown 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="white"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
      >
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 6,
              "left": 4,
              "right": 4,
              "top": 6,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  absoluteRTLLayout={false}
                  autoCapitalize="sentences"
                  autoFocus={false}
                  data={
                    Array [
                      Object {
                        "value": "Banana",
                      },
                      Object {
                        "value": "Mango",
                      },
                      Object {
                        "value": "Pear",
                      },
                    ]
                  }
                  disableFullscreenUI={true}
                  dropdownMargins={
                    Object {
                      "max": 16,
                      "min": 8,
                    }
                  }
                  dropdownOffset={
                    Object {
                      "left": 16,
                      "top": 0,
                    }
                  }
                  dropdownPosition={-8}
                  editable={false}
                  error=""
                  itemColor="rgba(0, 0, 0, .54)"
                  itemCount={8}
                  itemPadding={8}
                  labelExtractor={[Function]}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  propsExtractor={[Function]}
                  renderAccessory={[Function]}
                  rippleDuration={400}
                  selectionColor="#009f36"
                  shadeOpacity={0.12}
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  useNativeDriver={false}
                  value=""
                  valueExtractor={[Function]}
                />
                <View
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                      "top": 2,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onRippleAnimation={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            rippleCentered={false}
            rippleColor="#000"
            rippleDuration={400}
            rippleFades={true}
            rippleOpacity={0}
            rippleSequential={true}
            rippleSize={0}
            style={
              Object {
                "height": 48,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255, 255, 255, 1.0)",
                    "borderRadius": 2,
                    "position": "absolute",
                    "shadowColor": "rgba(0, 0, 0, 1.0)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.54,
                    "shadowRadius": 2,
                  },
                  Object {
                    "height": 136,
                    "left": undefined,
                    "top": undefined,
                    "transform": Array [
                      Object {
                        "translateY": 192,
                      },
                    ],
                    "width": undefined,
                  },
                  undefined,
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "paddingVertical": 8,
                  }
                }
                data={
                  Array [
                    Object {
                      "value": "Banana",
                    },
                    Object {
                      "value": "Mango",
                    },
                    Object {
                      "value": "Pear",
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEnabled={false}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "borderRadius": 2,
                    "flex": 1,
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Banana
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#000",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Mango
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#000",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Pear
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#000",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Dropdown Dropdown with error 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="white"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
      >
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 6,
              "left": 4,
              "right": 4,
              "top": 6,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                  "borderBottomWidth": 2,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(200, 0, 0, 0.8)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  absoluteRTLLayout={false}
                  autoCapitalize="sentences"
                  autoFocus={false}
                  data={
                    Array [
                      Object {
                        "value": "Banana",
                      },
                      Object {
                        "value": "Mango",
                      },
                      Object {
                        "value": "Pear",
                      },
                    ]
                  }
                  disableFullscreenUI={true}
                  dropdownMargins={
                    Object {
                      "max": 16,
                      "min": 8,
                    }
                  }
                  dropdownOffset={
                    Object {
                      "left": 16,
                      "top": 0,
                    }
                  }
                  dropdownPosition={-8}
                  editable={false}
                  error="Some error msg"
                  itemColor="rgba(0, 0, 0, .54)"
                  itemCount={8}
                  itemPadding={8}
                  labelExtractor={[Function]}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  propsExtractor={[Function]}
                  renderAccessory={[Function]}
                  rippleDuration={400}
                  selectionColor="#009f36"
                  shadeOpacity={0.12}
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  useNativeDriver={false}
                  value=""
                  valueExtractor={[Function]}
                />
                <View
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                      "top": 2,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  >
                    Some error msg
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onRippleAnimation={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            rippleCentered={false}
            rippleColor="#000"
            rippleDuration={400}
            rippleFades={true}
            rippleOpacity={0}
            rippleSequential={true}
            rippleSize={0}
            style={
              Object {
                "height": 48,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255, 255, 255, 1.0)",
                    "borderRadius": 2,
                    "position": "absolute",
                    "shadowColor": "rgba(0, 0, 0, 1.0)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.54,
                    "shadowRadius": 2,
                  },
                  Object {
                    "height": 136,
                    "left": undefined,
                    "top": undefined,
                    "transform": Array [
                      Object {
                        "translateY": 192,
                      },
                    ],
                    "width": undefined,
                  },
                  undefined,
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "paddingVertical": 8,
                  }
                }
                data={
                  Array [
                    Object {
                      "value": "Banana",
                    },
                    Object {
                      "value": "Mango",
                    },
                    Object {
                      "value": "Pear",
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEnabled={false}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "borderRadius": 2,
                    "flex": 1,
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Banana
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#000",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Mango
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#000",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Pear
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#000",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Dropdown Dropdown with white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
      >
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 6,
              "left": 4,
              "right": 4,
              "top": 6,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(255, 255, 255, 1)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(255, 255, 255, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  absoluteRTLLayout={false}
                  autoCapitalize="sentences"
                  autoFocus={false}
                  data={
                    Array [
                      Object {
                        "value": "Banana",
                      },
                      Object {
                        "value": "Mango",
                      },
                      Object {
                        "value": "Pear",
                      },
                    ]
                  }
                  disableFullscreenUI={true}
                  dropdownMargins={
                    Object {
                      "max": 16,
                      "min": 8,
                    }
                  }
                  dropdownOffset={
                    Object {
                      "left": 16,
                      "top": 0,
                    }
                  }
                  dropdownPosition={-8}
                  editable={false}
                  error=""
                  itemColor="rgba(0, 0, 0, .54)"
                  itemCount={8}
                  itemPadding={8}
                  labelExtractor={[Function]}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  propsExtractor={[Function]}
                  renderAccessory={[Function]}
                  rippleDuration={400}
                  selectionColor="#fff"
                  shadeOpacity={0.12}
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  useNativeDriver={false}
                  value=""
                  valueExtractor={[Function]}
                />
                <View
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                      "top": 2,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#fff",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onRippleAnimation={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            rippleCentered={false}
            rippleColor="#fff"
            rippleDuration={400}
            rippleFades={true}
            rippleOpacity={0}
            rippleSequential={true}
            rippleSize={0}
            style={
              Object {
                "height": 48,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255, 255, 255, 1.0)",
                    "borderRadius": 2,
                    "position": "absolute",
                    "shadowColor": "rgba(0, 0, 0, 1.0)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.54,
                    "shadowRadius": 2,
                  },
                  Object {
                    "height": 136,
                    "left": undefined,
                    "top": undefined,
                    "transform": Array [
                      Object {
                        "translateY": 192,
                      },
                    ],
                    "width": undefined,
                  },
                  undefined,
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "paddingVertical": 8,
                  }
                }
                data={
                  Array [
                    Object {
                      "value": "Banana",
                    },
                    Object {
                      "value": "Mango",
                    },
                    Object {
                      "value": "Pear",
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEnabled={false}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "borderRadius": 2,
                    "flex": 1,
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#fff"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Banana
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#fff"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Mango
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#fff"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Pear
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Dropdown Dropdown with white theme size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
      >
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 6,
              "left": 4,
              "right": 4,
              "top": 6,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="none"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(255, 255, 255, 1)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 31,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(255, 255, 255, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 16,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  absoluteRTLLayout={false}
                  autoCapitalize="sentences"
                  autoFocus={false}
                  data={
                    Array [
                      Object {
                        "value": "Banana",
                      },
                      Object {
                        "value": "Mango",
                      },
                      Object {
                        "value": "Pear",
                      },
                    ]
                  }
                  disableFullscreenUI={true}
                  dropdownMargins={
                    Object {
                      "max": 16,
                      "min": 8,
                    }
                  }
                  dropdownOffset={
                    Object {
                      "left": 16,
                      "top": 0,
                    }
                  }
                  dropdownPosition={-8}
                  editable={false}
                  error=""
                  itemColor="rgba(0, 0, 0, .54)"
                  itemCount={8}
                  itemPadding={8}
                  labelExtractor={[Function]}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  propsExtractor={[Function]}
                  renderAccessory={[Function]}
                  rippleDuration={400}
                  selectionColor="#fff"
                  shadeOpacity={0.12}
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  useNativeDriver={false}
                  value=""
                  valueExtractor={[Function]}
                />
                <View
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "justifyContent": "center",
                      "top": 2,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#fff",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onRippleAnimation={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            rippleCentered={false}
            rippleColor="#fff"
            rippleDuration={400}
            rippleFades={true}
            rippleOpacity={0}
            rippleSequential={true}
            rippleSize={0}
            style={
              Object {
                "height": 48,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 0,
                  },
                ]
              }
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(255, 255, 255, 1.0)",
                    "borderRadius": 2,
                    "position": "absolute",
                    "shadowColor": "rgba(0, 0, 0, 1.0)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.54,
                    "shadowRadius": 2,
                  },
                  Object {
                    "height": 136,
                    "left": undefined,
                    "top": undefined,
                    "transform": Array [
                      Object {
                        "translateY": 192,
                      },
                    ],
                    "width": undefined,
                  },
                  undefined,
                ]
              }
            >
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "paddingVertical": 8,
                  }
                }
                data={
                  Array [
                    Object {
                      "value": "Banana",
                    },
                    Object {
                      "value": "Mango",
                    },
                    Object {
                      "value": "Pear",
                    },
                  ]
                }
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                numColumns={1}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                renderItem={[Function]}
                scrollEnabled={false}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "borderRadius": 2,
                    "flex": 1,
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#fff"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Banana
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#fff"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Mango
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessible={true}
                      focusAnimation={null}
                      focusAnimationDuration={225}
                      hitSlop={
                        Object {
                          "bottom": 6,
                          "left": 4,
                          "right": 4,
                          "top": 6,
                        }
                      }
                      onLayout={[Function]}
                      onPress={[Function]}
                      onPressIn={[Function]}
                      onPressOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#fff"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 0,
                          "height": 40,
                          "justifyContent": "center",
                          "paddingLeft": undefined,
                          "paddingRight": undefined,
                          "paddingVertical": 8,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Array [
                            Object {
                              "textAlign": "left",
                            },
                            undefined,
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                            },
                          ]
                        }
                      >
                        Pear
                      </Text>
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "borderRadius": 0,
                            "bottom": 0,
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DurationPickerField DurationPickerField 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="auto"
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "width": 80,
                }
              }
            >
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="none"
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "rgba(0, 0, 0, 1)",
                        "borderBottomWidth": 0.5,
                        "height": 65,
                        "paddingBottom": 14,
                        "paddingTop": 27,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "position": "absolute",
                          "top": 31,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 1)",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 16,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <TextInput
                        absoluteRTLLayout={false}
                        autoCapitalize="sentences"
                        autoFocus={false}
                        data={
                          Array [
                            Object {
                              "value": "15 durationPickerField.minutes",
                            },
                            Object {
                              "value": "30 durationPickerField.minutes",
                            },
                            Object {
                              "value": "45 durationPickerField.minutes",
                            },
                            Object {
                              "value": "60 durationPickerField.minutes",
                            },
                            Object {
                              "value": "75 durationPickerField.minutes",
                            },
                            Object {
                              "value": "90 durationPickerField.minutes",
                            },
                            Object {
                              "value": "2 durationPickerField.hours",
                            },
                            Object {
                              "value": "2,5 durationPickerField.hours",
                            },
                            Object {
                              "value": "3 durationPickerField.hours",
                            },
                            Object {
                              "value": "4 durationPickerField.hours",
                            },
                          ]
                        }
                        disableFullscreenUI={true}
                        dropdownMargins={
                          Object {
                            "max": 16,
                            "min": 8,
                          }
                        }
                        dropdownOffset={
                          Object {
                            "left": 16,
                            "top": 0,
                          }
                        }
                        dropdownPosition={-8}
                        editable={false}
                        error=""
                        itemColor="rgba(0, 0, 0, .54)"
                        itemCount={8}
                        itemPadding={8}
                        labelExtractor={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onChangeText={[Function]}
                        onContentSizeChange={[Function]}
                        onFocus={[Function]}
                        propsExtractor={[Function]}
                        renderAccessory={[Function]}
                        rippleDuration={400}
                        selectionColor="#009f36"
                        shadeOpacity={0.12}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "margin": 0,
                              "padding": 0,
                              "top": 2,
                            },
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                              "height": 24,
                              "textAlign": "left",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 18,
                              "fontWeight": "normal",
                              "marginTop": 8,
                              "paddingHorizontal": 8,
                              "textAlign": "center",
                            },
                          ]
                        }
                        underlineColorAndroid="transparent"
                        useNativeDriver={false}
                        value=""
                        valueExtractor={[Function]}
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "flex-start",
                            "justifyContent": "center",
                            "top": 2,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 8,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgba(200, 0, 0, 0.8)",
                              "fontSize": 0,
                              "opacity": 0,
                            }
                          }
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#000",
                              "fontSize": 12,
                              "opacity": 1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  onLayout={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onRippleAnimation={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  rippleCentered={false}
                  rippleColor="#000"
                  rippleDuration={400}
                  rippleFades={true}
                  rippleOpacity={0}
                  rippleSequential={true}
                  rippleSize={0}
                  style={
                    Object {
                      "height": 48,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 16,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "left": 0,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <Modal
                hardwareAccelerated={false}
                onRequestClose={[Function]}
                supportedOrientations={
                  Array [
                    "portrait",
                    "portrait-upside-down",
                    "landscape",
                    "landscape-left",
                    "landscape-right",
                  ]
                }
                transparent={true}
                visible={false}
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(255, 255, 255, 1.0)",
                          "borderRadius": 2,
                          "position": "absolute",
                          "shadowColor": "rgba(0, 0, 0, 1.0)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 0.54,
                          "shadowRadius": 2,
                        },
                        Object {
                          "height": 336,
                          "left": undefined,
                          "top": undefined,
                          "transform": Array [
                            Object {
                              "translateY": -8,
                            },
                          ],
                          "width": undefined,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTScrollView
                      contentContainerStyle={
                        Object {
                          "paddingVertical": 8,
                        }
                      }
                      data={
                        Array [
                          Object {
                            "value": "15 durationPickerField.minutes",
                          },
                          Object {
                            "value": "30 durationPickerField.minutes",
                          },
                          Object {
                            "value": "45 durationPickerField.minutes",
                          },
                          Object {
                            "value": "60 durationPickerField.minutes",
                          },
                          Object {
                            "value": "75 durationPickerField.minutes",
                          },
                          Object {
                            "value": "90 durationPickerField.minutes",
                          },
                          Object {
                            "value": "2 durationPickerField.hours",
                          },
                          Object {
                            "value": "2,5 durationPickerField.hours",
                          },
                          Object {
                            "value": "3 durationPickerField.hours",
                          },
                          Object {
                            "value": "4 durationPickerField.hours",
                          },
                        ]
                      }
                      disableVirtualization={false}
                      getItem={[Function]}
                      getItemCount={[Function]}
                      horizontal={false}
                      initialNumToRender={10}
                      keyExtractor={[Function]}
                      maxToRenderPerBatch={10}
                      numColumns={1}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={2}
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      renderItem={[Function]}
                      scrollEnabled={true}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      style={
                        Object {
                          "borderRadius": 2,
                          "flex": 1,
                        }
                      }
                      updateCellsBatchingPeriod={50}
                      viewabilityConfigCallbackPairs={Array []}
                      windowSize={21}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              15 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              30 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              45 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              60 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              75 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              90 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              2 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              2,5 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              3 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              4 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </Modal>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DurationPickerField DurationPickerField fullWidth size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pointerEvents="auto"
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "width": "100%",
                }
              }
            >
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="none"
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "rgba(0, 0, 0, 1)",
                        "borderBottomWidth": 0.5,
                        "height": 65,
                        "paddingBottom": 14,
                        "paddingTop": 27,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "position": "absolute",
                          "top": 31,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 1)",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 16,
                          }
                        }
                      >
                        I'm the label
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <TextInput
                        absoluteRTLLayout={false}
                        autoCapitalize="sentences"
                        autoFocus={false}
                        data={
                          Array [
                            Object {
                              "value": "15 durationPickerField.minutes",
                            },
                            Object {
                              "value": "30 durationPickerField.minutes",
                            },
                            Object {
                              "value": "45 durationPickerField.minutes",
                            },
                            Object {
                              "value": "60 durationPickerField.minutes",
                            },
                            Object {
                              "value": "75 durationPickerField.minutes",
                            },
                            Object {
                              "value": "90 durationPickerField.minutes",
                            },
                            Object {
                              "value": "2 durationPickerField.hours",
                            },
                            Object {
                              "value": "2,5 durationPickerField.hours",
                            },
                            Object {
                              "value": "3 durationPickerField.hours",
                            },
                            Object {
                              "value": "4 durationPickerField.hours",
                            },
                          ]
                        }
                        disableFullscreenUI={true}
                        dropdownMargins={
                          Object {
                            "max": 16,
                            "min": 8,
                          }
                        }
                        dropdownOffset={
                          Object {
                            "left": 16,
                            "top": 0,
                          }
                        }
                        dropdownPosition={-8}
                        editable={false}
                        error=""
                        itemColor="rgba(0, 0, 0, .54)"
                        itemCount={8}
                        itemPadding={8}
                        labelExtractor={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onChangeText={[Function]}
                        onContentSizeChange={[Function]}
                        onFocus={[Function]}
                        propsExtractor={[Function]}
                        renderAccessory={[Function]}
                        rippleDuration={400}
                        selectionColor="#009f36"
                        shadeOpacity={0.12}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "margin": 0,
                              "padding": 0,
                              "top": 2,
                            },
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                              "height": 24,
                              "textAlign": "left",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 24,
                              "fontWeight": "normal",
                              "marginTop": 8,
                            },
                          ]
                        }
                        underlineColorAndroid="transparent"
                        useNativeDriver={false}
                        value=""
                        valueExtractor={[Function]}
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "flex-start",
                            "justifyContent": "center",
                            "top": 2,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 8,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgba(200, 0, 0, 0.8)",
                              "fontSize": 0,
                              "opacity": 0,
                            }
                          }
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#000",
                              "fontSize": 12,
                              "opacity": 1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  onLayout={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onRippleAnimation={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  rippleCentered={false}
                  rippleColor="#000"
                  rippleDuration={400}
                  rippleFades={true}
                  rippleOpacity={0}
                  rippleSequential={true}
                  rippleSize={0}
                  style={
                    Object {
                      "height": 48,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 16,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "left": 0,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <Modal
                hardwareAccelerated={false}
                onRequestClose={[Function]}
                supportedOrientations={
                  Array [
                    "portrait",
                    "portrait-upside-down",
                    "landscape",
                    "landscape-left",
                    "landscape-right",
                  ]
                }
                transparent={true}
                visible={false}
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(255, 255, 255, 1.0)",
                          "borderRadius": 2,
                          "position": "absolute",
                          "shadowColor": "rgba(0, 0, 0, 1.0)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 0.54,
                          "shadowRadius": 2,
                        },
                        Object {
                          "height": 336,
                          "left": undefined,
                          "top": undefined,
                          "transform": Array [
                            Object {
                              "translateY": -8,
                            },
                          ],
                          "width": undefined,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTScrollView
                      contentContainerStyle={
                        Object {
                          "paddingVertical": 8,
                        }
                      }
                      data={
                        Array [
                          Object {
                            "value": "15 durationPickerField.minutes",
                          },
                          Object {
                            "value": "30 durationPickerField.minutes",
                          },
                          Object {
                            "value": "45 durationPickerField.minutes",
                          },
                          Object {
                            "value": "60 durationPickerField.minutes",
                          },
                          Object {
                            "value": "75 durationPickerField.minutes",
                          },
                          Object {
                            "value": "90 durationPickerField.minutes",
                          },
                          Object {
                            "value": "2 durationPickerField.hours",
                          },
                          Object {
                            "value": "2,5 durationPickerField.hours",
                          },
                          Object {
                            "value": "3 durationPickerField.hours",
                          },
                          Object {
                            "value": "4 durationPickerField.hours",
                          },
                        ]
                      }
                      disableVirtualization={false}
                      getItem={[Function]}
                      getItemCount={[Function]}
                      horizontal={false}
                      initialNumToRender={10}
                      keyExtractor={[Function]}
                      maxToRenderPerBatch={10}
                      numColumns={1}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={2}
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      renderItem={[Function]}
                      scrollEnabled={true}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      style={
                        Object {
                          "borderRadius": 2,
                          "flex": 1,
                        }
                      }
                      updateCellsBatchingPeriod={50}
                      viewabilityConfigCallbackPairs={Array []}
                      windowSize={21}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              15 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              30 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              45 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              60 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              75 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              90 durationPickerField.minutes
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              2 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              2,5 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              3 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              4 durationPickerField.hours
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </Modal>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.DurationPickerField DurationPickerField white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID=""
        >
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
              ]
            }
          >
            <View>
              <View
                pixels={32}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 32,
                      "width": "auto",
                    },
                  ]
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": 27,
                    "textAlign": "left",
                  }
                }
              >
                
              </Text>
            </View>
            <View
              pixels={12}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 12,
                  },
                ]
              }
            />
            <View
              pointerEvents="auto"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "width": 80,
                  }
                }
              >
                <View
                  accessible={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 4,
                      "right": 4,
                      "top": 6,
                    }
                  }
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                >
                  <View
                    onResponderRelease={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="none"
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderBottomColor": "rgba(255, 255, 255, 1)",
                          "borderBottomWidth": 1,
                          "height": 65,
                          "paddingBottom": 14,
                          "paddingTop": 27,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "position": "absolute",
                            "top": 31,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "rgba(255, 255, 255, 1)",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 16,
                            }
                          }
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                      >
                        <TextInput
                          absoluteRTLLayout={false}
                          autoCapitalize="sentences"
                          autoFocus={false}
                          data={
                            Array [
                              Object {
                                "value": "15 durationPickerField.minutes",
                              },
                              Object {
                                "value": "30 durationPickerField.minutes",
                              },
                              Object {
                                "value": "45 durationPickerField.minutes",
                              },
                              Object {
                                "value": "60 durationPickerField.minutes",
                              },
                              Object {
                                "value": "75 durationPickerField.minutes",
                              },
                              Object {
                                "value": "90 durationPickerField.minutes",
                              },
                              Object {
                                "value": "2 durationPickerField.hours",
                              },
                              Object {
                                "value": "2,5 durationPickerField.hours",
                              },
                              Object {
                                "value": "3 durationPickerField.hours",
                              },
                              Object {
                                "value": "4 durationPickerField.hours",
                              },
                            ]
                          }
                          disableFullscreenUI={true}
                          dropdownMargins={
                            Object {
                              "max": 16,
                              "min": 8,
                            }
                          }
                          dropdownOffset={
                            Object {
                              "left": 16,
                              "top": 0,
                            }
                          }
                          dropdownPosition={-8}
                          editable={false}
                          error=""
                          itemColor="rgba(0, 0, 0, .54)"
                          itemCount={8}
                          itemPadding={8}
                          labelExtractor={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onChangeText={[Function]}
                          onContentSizeChange={[Function]}
                          onFocus={[Function]}
                          propsExtractor={[Function]}
                          renderAccessory={[Function]}
                          rippleDuration={400}
                          selectionColor="#fff"
                          shadeOpacity={0.12}
                          style={
                            Array [
                              Object {
                                "flex": 1,
                                "margin": 0,
                                "padding": 0,
                                "top": 2,
                              },
                              Object {
                                "color": "rgba(0, 0, 0, .87)",
                                "fontSize": 16,
                                "height": 24,
                                "textAlign": "left",
                              },
                              Object {
                                "color": "#fff",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "fontWeight": "normal",
                                "marginTop": 8,
                                "paddingHorizontal": 8,
                                "textAlign": "center",
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                          useNativeDriver={false}
                          value=""
                          valueExtractor={[Function]}
                        />
                        <View
                          style={
                            Object {
                              "alignSelf": "flex-start",
                              "justifyContent": "center",
                              "top": 2,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                          "height": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "bottom": 0,
                              "left": 0,
                              "paddingVertical": 4,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "color": "rgba(200, 0, 0, 0.8)",
                                "fontSize": 0,
                                "opacity": 0,
                              }
                            }
                          >
                            
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "bottom": 0,
                              "left": 0,
                              "paddingVertical": 4,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "color": "#fff",
                                "fontSize": 12,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    accessible={true}
                    onLayout={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onRippleAnimation={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    rippleCentered={false}
                    rippleColor="#fff"
                    rippleDuration={400}
                    rippleFades={true}
                    rippleOpacity={0}
                    rippleSequential={true}
                    rippleSize={0}
                    style={
                      Object {
                        "height": 48,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "bottom": 0,
                            "left": 0,
                            "overflow": "hidden",
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          Object {
                            "borderRadius": 0,
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onRequestClose={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "portrait-upside-down",
                      "landscape",
                      "landscape-left",
                      "landscape-right",
                    ]
                  }
                  transparent={true}
                  visible={false}
                >
                  <View
                    onResponderRelease={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(255, 255, 255, 1.0)",
                            "borderRadius": 2,
                            "position": "absolute",
                            "shadowColor": "rgba(0, 0, 0, 1.0)",
                            "shadowOffset": Object {
                              "height": 2,
                              "width": 0,
                            },
                            "shadowOpacity": 0.54,
                            "shadowRadius": 2,
                          },
                          Object {
                            "height": 336,
                            "left": undefined,
                            "top": undefined,
                            "transform": Array [
                              Object {
                                "translateY": -8,
                              },
                            ],
                            "width": undefined,
                          },
                          undefined,
                        ]
                      }
                    >
                      <RCTScrollView
                        contentContainerStyle={
                          Object {
                            "paddingVertical": 8,
                          }
                        }
                        data={
                          Array [
                            Object {
                              "value": "15 durationPickerField.minutes",
                            },
                            Object {
                              "value": "30 durationPickerField.minutes",
                            },
                            Object {
                              "value": "45 durationPickerField.minutes",
                            },
                            Object {
                              "value": "60 durationPickerField.minutes",
                            },
                            Object {
                              "value": "75 durationPickerField.minutes",
                            },
                            Object {
                              "value": "90 durationPickerField.minutes",
                            },
                            Object {
                              "value": "2 durationPickerField.hours",
                            },
                            Object {
                              "value": "2,5 durationPickerField.hours",
                            },
                            Object {
                              "value": "3 durationPickerField.hours",
                            },
                            Object {
                              "value": "4 durationPickerField.hours",
                            },
                          ]
                        }
                        disableVirtualization={false}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        horizontal={false}
                        initialNumToRender={10}
                        keyExtractor={[Function]}
                        maxToRenderPerBatch={10}
                        numColumns={1}
                        onContentSizeChange={[Function]}
                        onEndReachedThreshold={2}
                        onLayout={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        renderItem={[Function]}
                        scrollEnabled={true}
                        scrollEventThrottle={50}
                        stickyHeaderIndices={Array []}
                        style={
                          Object {
                            "borderRadius": 2,
                            "flex": 1,
                          }
                        }
                        updateCellsBatchingPeriod={50}
                        viewabilityConfigCallbackPairs={Array []}
                        windowSize={21}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                15 durationPickerField.minutes
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                30 durationPickerField.minutes
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                45 durationPickerField.minutes
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                60 durationPickerField.minutes
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                75 durationPickerField.minutes
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                90 durationPickerField.minutes
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                2 durationPickerField.hours
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                2,5 durationPickerField.hours
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                3 durationPickerField.hours
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                4 durationPickerField.hours
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View>
              <View
                pixels={32}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 32,
                      "width": "auto",
                    },
                  ]
                }
              />
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              pixels={12}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 12,
                  },
                ]
              }
            />
            <View>
              <View
                pixels={32}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 32,
                      "width": "auto",
                    },
                  ]
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": 27,
                    "textAlign": "left",
                  }
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.HeaderBtn HeaderBtn 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "gray",
          "flex": 1,
        }
      }
    >
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View />
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "width": 60,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 32,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.ImageSwiper ImageSwiper 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
            "position": "relative",
          },
          undefined,
        ]
      }
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        autoplay={false}
        autoplayDirection={true}
        autoplayTimeout={2.5}
        bounces={false}
        contentContainerStyle={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        contentOffset={
          Object {
            "x": 0,
          }
        }
        disableNextButton={false}
        horizontal={true}
        index={0}
        loadMinimal={false}
        loadMinimalSize={1}
        loop={true}
        onIndexChanged={[Function]}
        onMomentumScrollEnd={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        pagingEnabled={true}
        removeClippedSubviews={true}
        scrollsToTop={false}
        showsButtons={false}
        showsHorizontalScrollIndicator={false}
        showsPagination={true}
        showsVerticalScrollIndicator={false}
      >
        <View>
          <View
            style={
              Array [
                Object {
                  "height": 1334,
                  "width": 750,
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ]
            }
          >
            <Image
              source={
                Object {
                  "uri": "https://via.placeholder.com/350x150",
                }
              }
              style={
                Object {
                  "flex": 1,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "height": 1334,
                  "width": 750,
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ]
            }
          >
            <Image
              source={
                Object {
                  "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSv2CxOJIZX-hrhUZzyBcZ8t3_aJ6Zo0VFvs_loZIEpl_SkXUWJ0JeLTf-A",
                }
              }
              style={
                Object {
                  "flex": 1,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "height": 1334,
                  "width": 750,
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ]
            }
          >
            <Image
              source={
                Object {
                  "uri": "https://via.placeholder.com/350x150",
                }
              }
              style={
                Object {
                  "flex": 1,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "height": 1334,
                  "width": 750,
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ]
            }
          >
            <Image
              source={
                Object {
                  "uri": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSv2CxOJIZX-hrhUZzyBcZ8t3_aJ6Zo0VFvs_loZIEpl_SkXUWJ0JeLTf-A",
                }
              }
              style={
                Object {
                  "flex": 1,
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
      <View
        pointerEvents="none"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "bottom": 25,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#007aff",
                "borderRadius": 4,
                "height": 8,
                "marginBottom": 3,
                "marginLeft": 3,
                "marginRight": 3,
                "marginTop": 3,
                "width": 8,
              },
              undefined,
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,.2)",
                "borderRadius": 4,
                "height": 8,
                "marginBottom": 3,
                "marginLeft": 3,
                "marginRight": 3,
                "marginTop": 3,
                "width": 8,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField Dropdown comp 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="auto"
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "width": 80,
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderBottomColor": "rgba(0, 0, 0, 1)",
                      "borderBottomWidth": 0.5,
                      "height": 65,
                      "paddingBottom": 14,
                      "paddingTop": 27,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 31,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(0, 0, 0, 1)",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 16,
                        }
                      }
                    >
                      I'm the label
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      autoCapitalize="sentences"
                      autoFocus={false}
                      data={
                        Array [
                          Object {
                            "value": "Banana",
                          },
                          Object {
                            "value": "Mango",
                          },
                          Object {
                            "value": "Pear",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 16,
                          "min": 8,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 16,
                          "top": 0,
                        }
                      }
                      dropdownPosition={-8}
                      editable={false}
                      error=""
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={8}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="#009f36"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "rgba(0, 0, 0, .87)",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "fontWeight": "normal",
                            "marginTop": 8,
                            "paddingHorizontal": 8,
                            "textAlign": "center",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontSize": 0,
                            "opacity": 0,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#000",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="#000"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 136,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": 192,
                          },
                        ],
                        "width": undefined,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "value": "Banana",
                        },
                        Object {
                          "value": "Mango",
                        },
                        Object {
                          "value": "Pear",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Banana
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Mango
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Pear
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField Dropdown comp DISABLED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      onPress={[Function]}
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="auto"
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "width": 80,
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "height": 65,
                      "overflow": "hidden",
                      "paddingBottom": 14,
                      "paddingTop": 27,
                    }
                  }
                >
                  <View
                    pointerEvents="none"
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                        },
                        Object {
                          "borderColor": "#000",
                          "borderStyle": "dotted",
                          "borderWidth": 0,
                          "bottom": 0,
                          "left": -0,
                          "right": -0,
                          "top": -0,
                        },
                      ]
                    }
                  />
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 31,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(0, 0, 0, 1)",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 16,
                        }
                      }
                    >
                      I'm the label
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      autoCapitalize="sentences"
                      autoFocus={false}
                      data={
                        Array [
                          Object {
                            "value": "Banana",
                          },
                          Object {
                            "value": "Mango",
                          },
                          Object {
                            "value": "Pear",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 16,
                          "min": 8,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 16,
                          "top": 0,
                        }
                      }
                      dropdownPosition={-8}
                      editable={false}
                      error=""
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={8}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="#009f36"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "#000",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          Object {
                            "color": "#777",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "fontWeight": "normal",
                            "marginTop": 8,
                            "paddingHorizontal": 8,
                            "textAlign": "center",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontSize": 0,
                            "opacity": 0,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#000",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="#000"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 136,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": 192,
                          },
                        ],
                        "width": undefined,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "value": "Banana",
                        },
                        Object {
                          "value": "Mango",
                        },
                        Object {
                          "value": "Pear",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Banana
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Mango
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Pear
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#777",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField Dropdown comp fullWidth 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="auto"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderBottomColor": "rgba(0, 0, 0, 1)",
                      "borderBottomWidth": 0.5,
                      "height": 65,
                      "paddingBottom": 14,
                      "paddingTop": 27,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 31,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(0, 0, 0, 1)",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 16,
                        }
                      }
                    >
                      I'm the label
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      autoCapitalize="sentences"
                      autoFocus={false}
                      data={
                        Array [
                          Object {
                            "value": "Banana",
                          },
                          Object {
                            "value": "Mango",
                          },
                          Object {
                            "value": "Pear",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 16,
                          "min": 8,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 16,
                          "top": 0,
                        }
                      }
                      dropdownPosition={-8}
                      editable={false}
                      error=""
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={8}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="#009f36"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "rgba(0, 0, 0, .87)",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "fontWeight": "normal",
                            "marginTop": 8,
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontSize": 0,
                            "opacity": 0,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#000",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="#000"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 136,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": 192,
                          },
                        ],
                        "width": undefined,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "value": "Banana",
                        },
                        Object {
                          "value": "Mango",
                        },
                        Object {
                          "value": "Pear",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Banana
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Mango
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Pear
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField Dropdown comp fullWidth DISABLED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      onPress={[Function]}
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="auto"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "height": 65,
                      "overflow": "hidden",
                      "paddingBottom": 14,
                      "paddingTop": 27,
                    }
                  }
                >
                  <View
                    pointerEvents="none"
                    style={
                      Array [
                        Object {
                          "position": "absolute",
                        },
                        Object {
                          "borderColor": "#000",
                          "borderStyle": "dotted",
                          "borderWidth": 0,
                          "bottom": 0,
                          "left": -0,
                          "right": -0,
                          "top": -0,
                        },
                      ]
                    }
                  />
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 31,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(0, 0, 0, 1)",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 16,
                        }
                      }
                    >
                      I'm the label
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      autoCapitalize="sentences"
                      autoFocus={false}
                      data={
                        Array [
                          Object {
                            "value": "Banana",
                          },
                          Object {
                            "value": "Mango",
                          },
                          Object {
                            "value": "Pear",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 16,
                          "min": 8,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 16,
                          "top": 0,
                        }
                      }
                      dropdownPosition={-8}
                      editable={false}
                      error=""
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={8}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="#009f36"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "#000",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          Object {
                            "color": "#777",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "fontWeight": "normal",
                            "marginTop": 8,
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontSize": 0,
                            "opacity": 0,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#000",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="#000"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 136,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": 192,
                          },
                        ],
                        "width": undefined,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "value": "Banana",
                        },
                        Object {
                          "value": "Mango",
                        },
                        Object {
                          "value": "Pear",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Banana
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Mango
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Pear
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#777",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField Dropdown comp fullWidth with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="auto"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                      "borderBottomWidth": 2,
                      "height": 65,
                      "paddingBottom": 14,
                      "paddingTop": 27,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 31,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 16,
                        }
                      }
                    >
                      I'm the label
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      autoCapitalize="sentences"
                      autoFocus={false}
                      data={
                        Array [
                          Object {
                            "value": "Banana",
                          },
                          Object {
                            "value": "Mango",
                          },
                          Object {
                            "value": "Pear",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 16,
                          "min": 8,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 16,
                          "top": 0,
                        }
                      }
                      dropdownPosition={-8}
                      editable={false}
                      error="I'm the error"
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={8}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="#009f36"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "rgba(0, 0, 0, .87)",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "fontWeight": "normal",
                            "marginTop": 8,
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      >
                        I'm the error
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#000",
                            "fontSize": 12,
                            "opacity": 0,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="#000"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 136,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": 192,
                          },
                        ],
                        "width": undefined,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "value": "Banana",
                        },
                        Object {
                          "value": "Mango",
                        },
                        Object {
                          "value": "Pear",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Banana
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Mango
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Pear
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField Dropdown comp with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="auto"
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "width": 80,
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                      "borderBottomWidth": 2,
                      "height": 65,
                      "paddingBottom": 14,
                      "paddingTop": 27,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 31,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 16,
                        }
                      }
                    >
                      I'm the label
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      autoCapitalize="sentences"
                      autoFocus={false}
                      data={
                        Array [
                          Object {
                            "value": "Banana",
                          },
                          Object {
                            "value": "Mango",
                          },
                          Object {
                            "value": "Pear",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 16,
                          "min": 8,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 16,
                          "top": 0,
                        }
                      }
                      dropdownPosition={-8}
                      editable={false}
                      error="I'm the error"
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={8}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="#009f36"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "rgba(0, 0, 0, .87)",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "fontWeight": "normal",
                            "marginTop": 8,
                            "paddingHorizontal": 8,
                            "textAlign": "center",
                          },
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 24,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      >
                        I'm the error
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#000",
                            "fontSize": 12,
                            "opacity": 0,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="#000"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 136,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": 192,
                          },
                        ],
                        "width": undefined,
                      },
                      undefined,
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "value": "Banana",
                        },
                        Object {
                          "value": "Mango",
                        },
                        Object {
                          "value": "Pear",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Banana
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Mango
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="#000"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            Pear
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#000",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField TextField comp 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            prefix
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 176,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            suffix
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField TextField comp DISABLED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      onPress={[Function]}
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="none"
            style={
              Object {
                "width": 176,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "height": 65,
                  "overflow": "hidden",
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Array [
                    Object {
                      "position": "absolute",
                    },
                    Object {
                      "borderColor": "#000",
                      "borderStyle": "dotted",
                      "borderWidth": 0,
                      "bottom": 0,
                      "left": -0,
                      "right": -0,
                      "top": -0,
                    },
                  ]
                }
              />
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={false}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "#000",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#777",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#777",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField TextField comp fullWidth 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField TextField comp fullWidth DISABLED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      onPress={[Function]}
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="none"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "height": 65,
                  "overflow": "hidden",
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Array [
                    Object {
                      "position": "absolute",
                    },
                    Object {
                      "borderColor": "#000",
                      "borderStyle": "dotted",
                      "borderWidth": 0,
                      "bottom": 0,
                      "left": -0,
                      "right": -0,
                      "top": -0,
                    },
                  ]
                }
              />
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={false}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "#000",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#777",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#777",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField TextField comp fullWidth with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(200, 0, 0, 0.8)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error="I'm the error"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  >
                    I'm the error
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField TextField comp with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 176,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(200, 0, 0, 0.8)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error="I'm the error"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  >
                    I'm the error
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 24,
                "lineHeight": 36,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 176,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 24,
                "lineHeight": 36,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField size S 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 12,
                "lineHeight": 18,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 176,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-Regular",
                        "fontSize": 12,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="I'm the value"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 12,
                "lineHeight": 18,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="none"
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="auto"
              style={
                Object {
                  "width": 176,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                    "borderBottomWidth": 1,
                    "height": 65,
                    "paddingBottom": 14,
                    "paddingTop": 27,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                      "top": 5,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                      }
                    }
                  >
                    I'm the label
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCapitalize="sentences"
                    autoFocus={false}
                    disableFullscreenUI={true}
                    editable={true}
                    error=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    onFocus={[Function]}
                    selectionColor="#fff"
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "margin": 0,
                          "padding": 0,
                          "top": 2,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                          "fontSize": 16,
                          "height": 24,
                          "textAlign": "left",
                        },
                        Object {
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "fontWeight": "normal",
                          "marginTop": 8,
                          "paddingHorizontal": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="I'm the value"
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "height": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontSize": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 12,
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.InputField InputField white theme with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="none"
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="auto"
              style={
                Object {
                  "width": 176,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                    "borderBottomWidth": 1,
                    "height": 65,
                    "paddingBottom": 14,
                    "paddingTop": 27,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                      "top": 5,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                      }
                    }
                  >
                    I'm the label
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCapitalize="sentences"
                    autoFocus={false}
                    disableFullscreenUI={true}
                    editable={true}
                    error="I'm the error"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    onFocus={[Function]}
                    selectionColor="#fff"
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "margin": 0,
                          "padding": 0,
                          "top": 2,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                          "fontSize": 16,
                          "height": 24,
                          "textAlign": "left",
                        },
                        Object {
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "fontWeight": "normal",
                          "marginTop": 8,
                          "paddingHorizontal": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="I'm the value"
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "height": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontSize": 12,
                          "opacity": 1,
                        }
                      }
                    >
                      I'm the error
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 12,
                          "opacity": 0,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkNavigate LinkNavigate 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            I'm the text
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkNavigate LinkNavigate underline red 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#ff0000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
                "textDecorationColor": "#ff0000",
                "textDecorationLine": "underline",
                "textDecorationStyle": "solid",
              }
            }
          >
            I'm the text
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkNavigate LinkNavigate with icon 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            I'm the text
          </Text>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkOpenURL LinkOpenURL 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            I'm the text
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkOpenURL LinkOpenURL underline 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
                "textDecorationColor": "#000",
                "textDecorationLine": "underline",
                "textDecorationStyle": "solid",
              }
            }
          >
            I'm the text
          </Text>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkOpenURL LinkOpenURL with icon 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            I'm the text
          </Text>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LocationPickerField LocationPickerField 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="auto"
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "width": 80,
                }
              }
            >
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="none"
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "rgba(0, 0, 0, 1)",
                        "borderBottomWidth": 0.5,
                        "height": 65,
                        "paddingBottom": 14,
                        "paddingTop": 27,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "position": "absolute",
                          "top": 31,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 1)",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 16,
                          }
                        }
                      >
                        
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <TextInput
                        absoluteRTLLayout={false}
                        autoCapitalize="sentences"
                        autoFocus={false}
                        data={
                          Array [
                            Object {
                              "value": "Amsterdam",
                            },
                            Object {
                              "value": "Enschede",
                            },
                            Object {
                              "value": "Rotterdam",
                            },
                            Object {
                              "value": "Buenos Aires",
                            },
                          ]
                        }
                        disableFullscreenUI={true}
                        dropdownMargins={
                          Object {
                            "max": 16,
                            "min": 8,
                          }
                        }
                        dropdownOffset={
                          Object {
                            "left": 16,
                            "top": 0,
                          }
                        }
                        dropdownPosition={-4}
                        editable={false}
                        error=""
                        itemColor="rgba(0, 0, 0, .54)"
                        itemCount={4}
                        itemPadding={8}
                        labelExtractor={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onChangeText={[Function]}
                        onContentSizeChange={[Function]}
                        onFocus={[Function]}
                        propsExtractor={[Function]}
                        renderAccessory={[Function]}
                        rippleDuration={400}
                        selectionColor="#009f36"
                        shadeOpacity={0.12}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "margin": 0,
                              "padding": 0,
                              "top": 2,
                            },
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                              "height": 24,
                              "textAlign": "left",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 18,
                              "fontWeight": "normal",
                              "marginTop": 8,
                              "paddingHorizontal": 8,
                              "textAlign": "center",
                            },
                          ]
                        }
                        underlineColorAndroid="transparent"
                        useNativeDriver={false}
                        value=""
                        valueExtractor={[Function]}
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "flex-start",
                            "justifyContent": "center",
                            "top": 2,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 8,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgba(200, 0, 0, 0.8)",
                              "fontSize": 0,
                              "opacity": 0,
                            }
                          }
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#000",
                              "fontSize": 12,
                              "opacity": 1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  onLayout={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onRippleAnimation={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  rippleCentered={false}
                  rippleColor="#000"
                  rippleDuration={400}
                  rippleFades={true}
                  rippleOpacity={0}
                  rippleSequential={true}
                  rippleSize={0}
                  style={
                    Object {
                      "height": 48,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 16,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "left": 0,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <Modal
                hardwareAccelerated={false}
                onRequestClose={[Function]}
                supportedOrientations={
                  Array [
                    "portrait",
                    "portrait-upside-down",
                    "landscape",
                    "landscape-left",
                    "landscape-right",
                  ]
                }
                transparent={true}
                visible={false}
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(255, 255, 255, 1.0)",
                          "borderRadius": 2,
                          "position": "absolute",
                          "shadowColor": "rgba(0, 0, 0, 1.0)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 0.54,
                          "shadowRadius": 2,
                        },
                        Object {
                          "height": 176,
                          "left": undefined,
                          "top": undefined,
                          "transform": Array [
                            Object {
                              "translateY": -8,
                            },
                          ],
                          "width": undefined,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTScrollView
                      contentContainerStyle={
                        Object {
                          "paddingVertical": 8,
                        }
                      }
                      data={
                        Array [
                          Object {
                            "value": "Amsterdam",
                          },
                          Object {
                            "value": "Enschede",
                          },
                          Object {
                            "value": "Rotterdam",
                          },
                          Object {
                            "value": "Buenos Aires",
                          },
                        ]
                      }
                      disableVirtualization={false}
                      getItem={[Function]}
                      getItemCount={[Function]}
                      horizontal={false}
                      initialNumToRender={10}
                      keyExtractor={[Function]}
                      maxToRenderPerBatch={10}
                      numColumns={1}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={2}
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      renderItem={[Function]}
                      scrollEnabled={false}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      style={
                        Object {
                          "borderRadius": 2,
                          "flex": 1,
                        }
                      }
                      updateCellsBatchingPeriod={50}
                      viewabilityConfigCallbackPairs={Array []}
                      windowSize={21}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Amsterdam
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Enschede
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Rotterdam
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Buenos Aires
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </Modal>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LocationPickerField LocationPickerField fullWidth size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pointerEvents="auto"
            style={
              Array [
                Object {
                  "flexGrow": 1,
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "width": "100%",
                }
              }
            >
              <View
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 4,
                    "right": 4,
                    "top": 6,
                  }
                }
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="none"
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "rgba(0, 0, 0, 1)",
                        "borderBottomWidth": 0.5,
                        "height": 65,
                        "paddingBottom": 14,
                        "paddingTop": 27,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "position": "absolute",
                          "top": 31,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, 1)",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 16,
                          }
                        }
                      >
                        I'm the label
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <TextInput
                        absoluteRTLLayout={false}
                        autoCapitalize="sentences"
                        autoFocus={false}
                        data={
                          Array [
                            Object {
                              "value": "Amsterdam",
                            },
                            Object {
                              "value": "Enschede",
                            },
                            Object {
                              "value": "Rotterdam",
                            },
                            Object {
                              "value": "Buenos Aires",
                            },
                          ]
                        }
                        disableFullscreenUI={true}
                        dropdownMargins={
                          Object {
                            "max": 16,
                            "min": 8,
                          }
                        }
                        dropdownOffset={
                          Object {
                            "left": 16,
                            "top": 0,
                          }
                        }
                        dropdownPosition={-4}
                        editable={false}
                        error=""
                        itemColor="rgba(0, 0, 0, .54)"
                        itemCount={4}
                        itemPadding={8}
                        labelExtractor={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onChangeText={[Function]}
                        onContentSizeChange={[Function]}
                        onFocus={[Function]}
                        propsExtractor={[Function]}
                        renderAccessory={[Function]}
                        rippleDuration={400}
                        selectionColor="#009f36"
                        shadeOpacity={0.12}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "margin": 0,
                              "padding": 0,
                              "top": 2,
                            },
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                              "height": 24,
                              "textAlign": "left",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 24,
                              "fontWeight": "normal",
                              "marginTop": 8,
                            },
                          ]
                        }
                        underlineColorAndroid="transparent"
                        useNativeDriver={false}
                        value=""
                        valueExtractor={[Function]}
                      />
                      <View
                        style={
                          Object {
                            "alignSelf": "flex-start",
                            "justifyContent": "center",
                            "top": 2,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 8,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgba(200, 0, 0, 0.8)",
                              "fontSize": 0,
                              "opacity": 0,
                            }
                          }
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#000",
                              "fontSize": 12,
                              "opacity": 1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  onLayout={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onRippleAnimation={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  rippleCentered={false}
                  rippleColor="#000"
                  rippleDuration={400}
                  rippleFades={true}
                  rippleOpacity={0}
                  rippleSequential={true}
                  rippleSize={0}
                  style={
                    Object {
                      "height": 48,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 16,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "left": 0,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <Modal
                hardwareAccelerated={false}
                onRequestClose={[Function]}
                supportedOrientations={
                  Array [
                    "portrait",
                    "portrait-upside-down",
                    "landscape",
                    "landscape-left",
                    "landscape-right",
                  ]
                }
                transparent={true}
                visible={false}
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(255, 255, 255, 1.0)",
                          "borderRadius": 2,
                          "position": "absolute",
                          "shadowColor": "rgba(0, 0, 0, 1.0)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 0.54,
                          "shadowRadius": 2,
                        },
                        Object {
                          "height": 176,
                          "left": undefined,
                          "top": undefined,
                          "transform": Array [
                            Object {
                              "translateY": -8,
                            },
                          ],
                          "width": undefined,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTScrollView
                      contentContainerStyle={
                        Object {
                          "paddingVertical": 8,
                        }
                      }
                      data={
                        Array [
                          Object {
                            "value": "Amsterdam",
                          },
                          Object {
                            "value": "Enschede",
                          },
                          Object {
                            "value": "Rotterdam",
                          },
                          Object {
                            "value": "Buenos Aires",
                          },
                        ]
                      }
                      disableVirtualization={false}
                      getItem={[Function]}
                      getItemCount={[Function]}
                      horizontal={false}
                      initialNumToRender={10}
                      keyExtractor={[Function]}
                      maxToRenderPerBatch={10}
                      numColumns={1}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={2}
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      renderItem={[Function]}
                      scrollEnabled={false}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      style={
                        Object {
                          "borderRadius": 2,
                          "flex": 1,
                        }
                      }
                      updateCellsBatchingPeriod={50}
                      viewabilityConfigCallbackPairs={Array []}
                      windowSize={21}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Amsterdam
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Enschede
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Rotterdam
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusAnimation={null}
                            focusAnimationDuration={225}
                            hitSlop={
                              Object {
                                "bottom": 6,
                                "left": 4,
                                "right": 4,
                                "top": 6,
                              }
                            }
                            onLayout={[Function]}
                            onPress={[Function]}
                            onPressIn={[Function]}
                            onPressOut={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            rippleCentered={false}
                            rippleColor="#000"
                            rippleDuration={400}
                            rippleFades={true}
                            rippleOpacity={0}
                            rippleSequential={true}
                            rippleSize={0}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "borderRadius": 0,
                                "height": 40,
                                "justifyContent": "center",
                                "paddingLeft": undefined,
                                "paddingRight": undefined,
                                "paddingVertical": 8,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "textAlign": "left",
                                  },
                                  undefined,
                                  Object {
                                    "color": "rgba(0, 0, 0, .87)",
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Buenos Aires
                            </Text>
                            <View
                              style={
                                Object {
                                  "backgroundColor": "#000",
                                  "borderRadius": 0,
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </Modal>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#000",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LocationPickerField LocationPickerField white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID=""
        >
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
              ]
            }
          >
            <View>
              <View
                pixels={32}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 32,
                      "width": "auto",
                    },
                  ]
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": 27,
                    "textAlign": "left",
                  }
                }
              >
                
              </Text>
            </View>
            <View
              pixels={12}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 12,
                  },
                ]
              }
            />
            <View
              pointerEvents="auto"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "width": 80,
                  }
                }
              >
                <View
                  accessible={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 4,
                      "right": 4,
                      "top": 6,
                    }
                  }
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                >
                  <View
                    onResponderRelease={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="none"
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderBottomColor": "rgba(255, 255, 255, 1)",
                          "borderBottomWidth": 1,
                          "height": 65,
                          "paddingBottom": 14,
                          "paddingTop": 27,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "position": "absolute",
                            "top": 31,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "rgba(255, 255, 255, 1)",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 16,
                            }
                          }
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                      >
                        <TextInput
                          absoluteRTLLayout={false}
                          autoCapitalize="sentences"
                          autoFocus={false}
                          data={
                            Array [
                              Object {
                                "value": "Amsterdam",
                              },
                              Object {
                                "value": "Enschede",
                              },
                              Object {
                                "value": "Rotterdam",
                              },
                              Object {
                                "value": "Buenos Aires",
                              },
                            ]
                          }
                          disableFullscreenUI={true}
                          dropdownMargins={
                            Object {
                              "max": 16,
                              "min": 8,
                            }
                          }
                          dropdownOffset={
                            Object {
                              "left": 16,
                              "top": 0,
                            }
                          }
                          dropdownPosition={-4}
                          editable={false}
                          error=""
                          itemColor="rgba(0, 0, 0, .54)"
                          itemCount={4}
                          itemPadding={8}
                          labelExtractor={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onChangeText={[Function]}
                          onContentSizeChange={[Function]}
                          onFocus={[Function]}
                          propsExtractor={[Function]}
                          renderAccessory={[Function]}
                          rippleDuration={400}
                          selectionColor="#fff"
                          shadeOpacity={0.12}
                          style={
                            Array [
                              Object {
                                "flex": 1,
                                "margin": 0,
                                "padding": 0,
                                "top": 2,
                              },
                              Object {
                                "color": "rgba(0, 0, 0, .87)",
                                "fontSize": 16,
                                "height": 24,
                                "textAlign": "left",
                              },
                              Object {
                                "color": "#fff",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "fontWeight": "normal",
                                "marginTop": 8,
                                "paddingHorizontal": 8,
                                "textAlign": "center",
                              },
                            ]
                          }
                          underlineColorAndroid="transparent"
                          useNativeDriver={false}
                          value=""
                          valueExtractor={[Function]}
                        />
                        <View
                          style={
                            Object {
                              "alignSelf": "flex-start",
                              "justifyContent": "center",
                              "top": 2,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                          "height": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "bottom": 0,
                              "left": 0,
                              "paddingVertical": 4,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "color": "rgba(200, 0, 0, 0.8)",
                                "fontSize": 0,
                                "opacity": 0,
                              }
                            }
                          >
                            
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "flex-start",
                              "bottom": 0,
                              "left": 0,
                              "paddingVertical": 4,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "color": "#fff",
                                "fontSize": 12,
                                "opacity": 1,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    accessible={true}
                    onLayout={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onRippleAnimation={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                    rippleCentered={false}
                    rippleColor="#fff"
                    rippleDuration={400}
                    rippleFades={true}
                    rippleOpacity={0}
                    rippleSequential={true}
                    rippleSize={0}
                    style={
                      Object {
                        "height": 48,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "bottom": 0,
                            "left": 0,
                            "overflow": "hidden",
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          Object {
                            "borderRadius": 0,
                          },
                        ]
                      }
                    />
                  </View>
                </View>
                <Modal
                  hardwareAccelerated={false}
                  onRequestClose={[Function]}
                  supportedOrientations={
                    Array [
                      "portrait",
                      "portrait-upside-down",
                      "landscape",
                      "landscape-left",
                      "landscape-right",
                    ]
                  }
                  transparent={true}
                  visible={false}
                >
                  <View
                    onResponderRelease={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(255, 255, 255, 1.0)",
                            "borderRadius": 2,
                            "position": "absolute",
                            "shadowColor": "rgba(0, 0, 0, 1.0)",
                            "shadowOffset": Object {
                              "height": 2,
                              "width": 0,
                            },
                            "shadowOpacity": 0.54,
                            "shadowRadius": 2,
                          },
                          Object {
                            "height": 176,
                            "left": undefined,
                            "top": undefined,
                            "transform": Array [
                              Object {
                                "translateY": -8,
                              },
                            ],
                            "width": undefined,
                          },
                          undefined,
                        ]
                      }
                    >
                      <RCTScrollView
                        contentContainerStyle={
                          Object {
                            "paddingVertical": 8,
                          }
                        }
                        data={
                          Array [
                            Object {
                              "value": "Amsterdam",
                            },
                            Object {
                              "value": "Enschede",
                            },
                            Object {
                              "value": "Rotterdam",
                            },
                            Object {
                              "value": "Buenos Aires",
                            },
                          ]
                        }
                        disableVirtualization={false}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        horizontal={false}
                        initialNumToRender={10}
                        keyExtractor={[Function]}
                        maxToRenderPerBatch={10}
                        numColumns={1}
                        onContentSizeChange={[Function]}
                        onEndReachedThreshold={2}
                        onLayout={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        renderItem={[Function]}
                        scrollEnabled={false}
                        scrollEventThrottle={50}
                        stickyHeaderIndices={Array []}
                        style={
                          Object {
                            "borderRadius": 2,
                            "flex": 1,
                          }
                        }
                        updateCellsBatchingPeriod={50}
                        viewabilityConfigCallbackPairs={Array []}
                        windowSize={21}
                      >
                        <View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                Amsterdam
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                Enschede
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                Rotterdam
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                          <View
                            onLayout={[Function]}
                            style={null}
                          >
                            <View
                              accessible={true}
                              focusAnimation={null}
                              focusAnimationDuration={225}
                              hitSlop={
                                Object {
                                  "bottom": 6,
                                  "left": 4,
                                  "right": 4,
                                  "top": 6,
                                }
                              }
                              onLayout={[Function]}
                              onPress={[Function]}
                              onPressIn={[Function]}
                              onPressOut={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="box-only"
                              rippleCentered={false}
                              rippleColor="#fff"
                              rippleDuration={400}
                              rippleFades={true}
                              rippleOpacity={0}
                              rippleSequential={true}
                              rippleSize={0}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderRadius": 0,
                                  "height": 40,
                                  "justifyContent": "center",
                                  "paddingLeft": undefined,
                                  "paddingRight": undefined,
                                  "paddingVertical": 8,
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    undefined,
                                    Object {
                                      "color": "rgba(0, 0, 0, .87)",
                                      "fontSize": 16,
                                    },
                                  ]
                                }
                              >
                                Buenos Aires
                              </Text>
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "#fff",
                                    "borderRadius": 0,
                                    "bottom": 0,
                                    "left": 0,
                                    "opacity": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "bottom": 0,
                                      "left": 0,
                                      "overflow": "hidden",
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {
                                      "borderRadius": 0,
                                    },
                                  ]
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </RCTScrollView>
                    </View>
                  </View>
                </Modal>
              </View>
            </View>
            <View>
              <View
                pixels={32}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 32,
                      "width": "auto",
                    },
                  ]
                }
              />
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              pixels={12}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 12,
                  },
                ]
              }
            />
            <View>
              <View
                pixels={32}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": 32,
                      "width": "auto",
                    },
                  ]
                }
              />
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": 27,
                    "textAlign": "left",
                  }
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Logo Logo 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="88"
        bbWidth="88"
        height={88}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            undefined,
            false,
            Object {
              "flex": 0,
              "height": 88,
              "width": 88,
            },
          ]
        }
        vbHeight={79}
        vbWidth={79}
        version="1.1"
        width={88}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              0,
              0,
              0,
              1,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth="1"
          x={0}
          y={0}
        >
          <RNSVGGroup
            fill={null}
            fillOpacity={1}
            fillRule={1}
            font={Object {}}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            name="Onboarding"
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "stroke",
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={null}
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={0}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth="1"
            x={0}
            y={0}
          >
            <RNSVGPath
              d="M4.8,8.21565038e-15 L74.2,8.21565038e-15 C76.8509668,7.72867568e-15 79,2.1490332 79,4.8 L79,74.2 C79,76.8509668 76.8509668,79 74.2,79 L4.8,79 C2.1490332,79 -2.33988546e-15,76.8509668 -2.66453526e-15,74.2 L0,4.8 C-3.24649801e-16,2.1490332 2.1490332,6.03808982e-15 4.8,5.55111512e-15 Z"
              fill={
                Array [
                  0,
                  0.027450980392156862,
                  0.8392156862745098,
                  0.32941176470588235,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-6"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M14 11 65 11 65 68 14 68z"
              fill={
                Array [
                  0,
                  1,
                  1,
                  1,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M0 45 53 45 53 56 0 56z"
              fill={
                Array [
                  0,
                  0.1411764705882353,
                  0.5098039215686274,
                  0.19607843137254902,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-3-Copy-5"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M26 22 79 22 79 33 26 33z"
              fill={
                Array [
                  0,
                  0.1411764705882353,
                  0.5098039215686274,
                  0.19607843137254902,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-3-Copy-4"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M0 11 14 11 14 68 0 68z"
              fill={
                Array [
                  0,
                  0.16862745098039217,
                  0.6588235294117647,
                  0.2901960784313726,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-2"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M65 11 79 11 79 68 65 68z"
              fill={
                Array [
                  0,
                  0.16862745098039217,
                  0.6588235294117647,
                  0.2901960784313726,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-2-Copy-2"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M0 68 79 68 79 79 0 79z"
              fill={
                Array [
                  0,
                  0,
                  0,
                  0,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-3-Copy-2"
              opacity={1}
              originX={0}
              originY={0}
              propList={Array []}
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M14 8.21565038e-15 65 8.21565038e-15 65 11 14 11z"
              fill={
                Array [
                  0,
                  0.1411764705882353,
                  0.5098039215686274,
                  0.19607843137254902,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-3-Copy"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
            <RNSVGPath
              d="M14 68 65 68 65 79 14 79z"
              fill={
                Array [
                  0,
                  0.1411764705882353,
                  0.5098039215686274,
                  0.19607843137254902,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              name="Rectangle-3-Copy-3"
              opacity={1}
              originX={0}
              originY={0}
              propList={
                Array [
                  "fill",
                ]
              }
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Menu Menu 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "gray",
          "flex": 1,
        }
      }
    >
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View />
        <View>
          <View
            collapsable={false}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
            >
              <View
                ctx={
                  Object {
                    "menuActions": Object {
                      "_getOpenedMenu": [Function],
                      "_notify": [Function],
                      "closeMenu": [Function],
                      "isMenuOpen": [Function],
                      "openMenu": [Function],
                      "toggleMenu": [Function],
                    },
                    "menuRegistry": Object {
                      "getAll": [Function],
                      "getMenu": [Function],
                      "setOptionsCustomStyles": [Function],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                      "updateLayoutInfo": [Function],
                    },
                  }
                }
                style={
                  Array [
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  testID=""
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      justifyContent="center"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "center",
                            "width": 60,
                          },
                        ]
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontSize": 32,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NavBar NavBar 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "flex": 1,
          }
        }
      />
      <View
        alignItems="flex-end"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#fff",
              "borderTopColor": "#e6e6e6",
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 0,
              "borderTopWidth": 0.5,
              "flexBasis": 0,
              "flexGrow": 9,
              "flexShrink": 1,
              "height": 48,
              "opacity": 1,
            }
          }
          testID="navbarButton_spots"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.34)",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "rgba(0,0,0,0.34)",
                  "fontFamily": "Rajdhani-Regular",
                  "fontSize": 12,
                  "lineHeight": 18,
                  "textAlign": "left",
                }
              }
            >
              navBar.spots
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#fff",
              "borderTopColor": "#e6e6e6",
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 0,
              "borderTopWidth": 0.5,
              "flexBasis": 0,
              "flexGrow": 9,
              "flexShrink": 1,
              "height": 48,
              "opacity": 1,
            }
          }
          testID="navbarButton_activities"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.34)",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "rgba(0,0,0,0.34)",
                  "fontFamily": "Rajdhani-Regular",
                  "fontSize": 12,
                  "lineHeight": 18,
                  "textAlign": "left",
                }
              }
            >
              navBar.activities
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#009f36",
              "borderTopColor": "rgba(0,0,0,0)",
              "borderTopLeftRadius": 8,
              "borderTopRightRadius": 8,
              "borderTopWidth": 0,
              "flexBasis": 0,
              "flexGrow": 10,
              "flexShrink": 1,
              "height": 56,
              "opacity": 1,
            }
          }
          testID="navbarButton_organize"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 32,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-Regular",
                  "fontSize": 12,
                  "lineHeight": 18,
                  "textAlign": "left",
                }
              }
            >
              navBar.organize
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#fff",
              "borderTopColor": "#e6e6e6",
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 0,
              "borderTopWidth": 0.5,
              "flexBasis": 0,
              "flexGrow": 9,
              "flexShrink": 1,
              "height": 48,
              "opacity": 1,
            }
          }
          testID="navbarButton_notifications"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.34)",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "rgba(0,0,0,0.34)",
                  "fontFamily": "Rajdhani-Regular",
                  "fontSize": 12,
                  "lineHeight": 18,
                  "textAlign": "left",
                }
              }
            >
              navBar.notifications
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#fff",
              "borderTopColor": "#e6e6e6",
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 0,
              "borderTopWidth": 0.5,
              "flexBasis": 0,
              "flexGrow": 9,
              "flexShrink": 1,
              "height": 48,
              "opacity": 1,
            }
          }
          testID="navbarButton_profile"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.34)",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "rgba(0,0,0,0.34)",
                  "fontFamily": "Rajdhani-Regular",
                  "fontSize": 12,
                  "lineHeight": 18,
                  "textAlign": "left",
                }
              }
            >
              navBar.profile
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NavBarButton NavBarButton 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "borderTopColor": "#e6e6e6",
            "borderTopLeftRadius": 0,
            "borderTopRightRadius": 0,
            "borderTopWidth": 0.5,
            "flexBasis": 0,
            "flexGrow": 9,
            "flexShrink": 1,
            "height": 48,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "rgba(0,0,0,0.34)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "rgba(0,0,0,0.34)",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 12,
                "lineHeight": 18,
                "textAlign": "left",
              }
            }
          >
            I'm the label
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NavBarButton NavBarButton main 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#009f36",
            "borderTopColor": "rgba(0,0,0,0)",
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "borderTopWidth": 0,
            "flexBasis": 0,
            "flexGrow": 10,
            "flexShrink": 1,
            "height": 56,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 32,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 12,
                "lineHeight": 18,
                "textAlign": "left",
              }
            }
          >
            I'm the label
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NavDot NavDot active 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "black",
          "height": 100,
        }
      }
    >
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          pixels={4}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 4,
              },
            ]
          }
        />
        <View
          active={true}
          style={
            Array [
              Object {
                "backgroundColor": "#f5a623",
                "borderRadius": 10,
                "height": 10,
                "width": 10,
              },
            ]
          }
        />
        <View
          pixels={4}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 4,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NavDot NavDot default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "black",
          "height": 100,
        }
      }
    >
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          pixels={4}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 4,
              },
            ]
          }
        />
        <View
          active={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255,255,255,.2)",
                "borderRadius": 10,
                "height": 10,
                "width": 10,
              },
            ]
          }
        />
        <View
          pixels={4}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 4,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NavDots Default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "black",
          "height": 50,
        }
      }
    >
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            active={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(255,255,255,.2)",
                  "borderRadius": 10,
                  "height": 10,
                  "width": 10,
                },
              ]
            }
          />
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            active={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(255,255,255,.2)",
                  "borderRadius": 10,
                  "height": 10,
                  "width": 10,
                },
              ]
            }
          />
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            active={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(255,255,255,.2)",
                  "borderRadius": 10,
                  "height": 10,
                  "width": 10,
                },
              ]
            }
          />
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            active={true}
            style={
              Array [
                Object {
                  "backgroundColor": "#f5a623",
                  "borderRadius": 10,
                  "height": 10,
                  "width": 10,
                },
              ]
            }
          />
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            active={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(255,255,255,.2)",
                  "borderRadius": 10,
                  "height": 10,
                  "width": 10,
                },
              ]
            }
          />
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.NothingFound NothingFound 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": "100%",
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#ccc",
              "fontSize": 96,
            },
            undefined,
            Object {
              "fontFamily": "Material Design Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "maxWidth": 270,
              "width": "100%",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#ccc",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "center",
            }
          }
        >
          Oops, nothing found
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.OrDivider OrDivider 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <Text>
        Above
      </Text>
      <View
        alignItems="center"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          row={false}
          style={
            Array [
              Object {
                "borderBottomColor": "#e6e6e6",
                "borderBottomWidth": 1,
                "borderRightColor": "rgba(0,0,0,0)",
                "borderRightWidth": 0,
                "flexGrow": 1,
              },
            ]
          }
        />
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          orDivider.txt
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          row={false}
          style={
            Array [
              Object {
                "borderBottomColor": "#e6e6e6",
                "borderBottomWidth": 1,
                "borderRightColor": "rgba(0,0,0,0)",
                "borderRightWidth": 0,
                "flexGrow": 1,
              },
            ]
          }
        />
      </View>
      <Text>
        Below
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="actionYellow"
        borderColor="actionYellow"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f5a623",
              "borderColor": "#f5a623",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton default with icon 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="actionYellow"
        borderColor="actionYellow"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f5a623",
              "borderColor": "#f5a623",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          pixels={16}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 16,
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        alignItems="center"
        bgColor="actionYellow"
        borderColor="actionYellow"
        disabled={true}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#e6e6e6",
              "borderColor": "#e6e6e6",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton ghost 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="white"
        borderColor="darkGray"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#979797",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton ghost disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        alignItems="center"
        bgColor="white"
        borderColor="darkGray"
        disabled={true}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#e6e6e6",
              "borderColor": "#e6e6e6",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton info 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="info"
        borderColor="info"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#019AE8",
              "borderColor": "#019AE8",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton primary 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="grass"
        borderColor="grass"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#009f36",
              "borderColor": "#009f36",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton primary small 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="grass"
        borderColor="grass"
        disabled={false}
        justifyContent="center"
        size="S"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#009f36",
              "borderColor": "#009f36",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 32,
              "justifyContent": "center",
              "minWidth": 80,
              "width": 120,
            },
          ]
        }
        width={120}
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton secondary 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="gray"
        borderColor="gray"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#777",
              "borderColor": "#777",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton transparent 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="transparent"
          borderColor="white"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0,0,0,0)",
                "borderColor": "#fff",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            label
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton warning 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        alignItems="center"
        bgColor="negative"
        borderColor="negative"
        disabled={false}
        justifyContent="center"
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#E0301E",
              "borderColor": "#E0301E",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "height": 48,
              "justifyContent": "center",
              "minWidth": 80,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          label
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Rating Rating 1 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="center"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Rating Rating 3 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="center"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Rating Rating 4.5 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="center"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "rgba(0,0,0,0.34)",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton dark 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="black"
        borderColor="black"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#000",
              "borderColor": "#000",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="actionYellow"
        borderColor="actionYellow"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f5a623",
              "borderColor": "#f5a623",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="actionYellow"
        borderColor="actionYellow"
        disabled={true}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#e6e6e6",
              "borderColor": "#e6e6e6",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton ghost 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="white"
        borderColor="darkGray"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#979797",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton ghost disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="white"
        borderColor="darkGray"
        disabled={true}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#e6e6e6",
              "borderColor": "#e6e6e6",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton info 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="info"
        borderColor="info"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#019AE8",
              "borderColor": "#019AE8",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton primary 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="grass"
        borderColor="grass"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#009f36",
              "borderColor": "#009f36",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton primary reverse 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="white"
        borderColor="grass"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#009f36",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#009f36",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton primary small 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="grass"
        borderColor="grass"
        disabled={false}
        size="S"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#009f36",
              "borderColor": "#009f36",
              "borderRadius": 32,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 32,
              "justifyContent": "center",
              "width": 32,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton secondary 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="gray"
        borderColor="gray"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#777",
              "borderColor": "#777",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton translucid 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "black",
          "height": 100,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          bgColor="white85"
          borderColor="shade"
          disabled={false}
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(255,255,255,0.85)",
                "borderColor": "#BDBDBD",
                "borderRadius": 40,
                "borderStyle": "solid",
                "borderWidth": 0.3,
                "height": 40,
                "justifyContent": "center",
                "width": 40,
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#009f36",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton warning 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="negative"
        borderColor="negative"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#E0301E",
              "borderColor": "#E0301E",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RoundButton RoundButton warning reverse 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        bgColor="white"
        borderColor="negative"
        disabled={false}
        size="M"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fff",
              "borderColor": "#E0301E",
              "borderRadius": 40,
              "borderStyle": "solid",
              "borderWidth": 0.3,
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#E0301E",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Row Row 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "black",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 180,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text>
          I'm inside a Row :)
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Slider Slider default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text>
        0
      </Text>
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <RCTSlider
        disabled={false}
        enabled={true}
        maximumValue={20}
        minimumTrackTintColor="#009f36"
        minimumValue={0}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        step={0}
        style={
          Array [
            Object {
              "height": 40,
            },
            Object {
              "marginHorizontal": -10,
            },
          ]
        }
        thumbTintColor="#009f36"
        value={0}
      />
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          0
        </Text>
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          20
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Slider Slider initialValue 5 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text>
        5
      </Text>
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <RCTSlider
        disabled={false}
        enabled={true}
        maximumValue={20}
        minimumTrackTintColor="#009f36"
        minimumValue={0}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onValueChange={[Function]}
        step={0}
        style={
          Array [
            Object {
              "height": 40,
            },
            Object {
              "marginHorizontal": -10,
            },
          ]
        }
        thumbTintColor="#009f36"
        value={5}
      />
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          0
        </Text>
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          20
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SliderWithText SliderWithText 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "black",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 180,
          },
        ]
      }
    >
      <Text>
        0
      </Text>
      <View
        style={
          Array [
            Object {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          I'm the label
        </Text>
        <Text>
          I'm the description
        </Text>
        <View
          pixels={16}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 16,
                "width": "auto",
              },
            ]
          }
        />
        <RCTSlider
          disabled={false}
          enabled={true}
          maximumValue={20}
          minimumTrackTintColor="#009f36"
          minimumValue={0}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onValueChange={[Function]}
          step={0}
          style={
            Array [
              Object {
                "height": 40,
              },
              Object {
                "marginHorizontal": -10,
              },
            ]
          }
          thumbTintColor="#009f36"
          value={0}
        />
        <View
          alignItems="stretch"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "textAlign": "left",
              }
            }
          >
            0
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "textAlign": "left",
              }
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Spacer Spacer size L 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "borderColor": "blue",
          "borderWidth": 1,
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      />
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Spacer Spacer size L row 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          Object {
            "borderColor": "blue",
            "borderWidth": 1,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 100,
            },
          ]
        }
      />
      <View
        pixels={16}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 16,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 100,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Spacer Spacer size M 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "borderColor": "blue",
          "borderWidth": 1,
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      />
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Spacer Spacer size M row 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          Object {
            "borderColor": "blue",
            "borderWidth": 1,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 100,
            },
          ]
        }
      />
      <View
        pixels={8}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 8,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 100,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Spacer Spacer size S 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "borderColor": "blue",
          "borderWidth": 1,
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      />
      <View
        pixels={4}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 4,
              "width": "auto",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Spacer Spacer size S row 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          Object {
            "borderColor": "blue",
            "borderWidth": 1,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 100,
            },
          ]
        }
      />
      <View
        pixels={4}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 4,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "red",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 100,
            },
          ]
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SportCard SportCard 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SportCard SportCard isSelected 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SportPickerField SportPickerField 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View
          pointerEvents="none"
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": 380,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                        "paddingHorizontal": 8,
                        "textAlign": "center",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="sportPickerField.defaultValue"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pixels={12}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 12,
              },
            ]
          }
        />
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.8)",
            "display": "flex",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 4,
                "display": "flex",
                "marginBottom": 48,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 48,
                "maxWidth": 320,
                "width": "90%",
              },
            ]
          }
        >
          <View>
            <View
              bgColor="transparent"
              height={null}
              midHeight={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 24,
                    "lineHeight": 36,
                    "textAlign": "left",
                  }
                }
              >
                sportPickerModal.header
              </Text>
            </View>
            <View
              height={400.40000000000003}
              style={
                Array [
                  Object {
                    "maxHeight": 400.40000000000003,
                  },
                ]
              }
            >
              <RCTScrollView>
                <View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexBasis": 0,
                          "flexGrow": 1,
                          "flexShrink": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <ActivityIndicator
                      animating={true}
                      color="#009f36"
                      hidesWhenStopped={true}
                      size="large"
                    />
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SportPickerField SportPickerField fullWidth size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID=""
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(0, 0, 0, 1)",
                  "borderBottomWidth": 0.5,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  I'm the label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  selectionColor="#009f36"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 24,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="sportPickerField.defaultValue"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#000",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.8)",
            "display": "flex",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 4,
                "display": "flex",
                "marginBottom": 48,
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": 48,
                "maxWidth": 320,
                "width": "90%",
              },
            ]
          }
        >
          <View>
            <View
              bgColor="transparent"
              height={null}
              midHeight={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  },
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 24,
                    "lineHeight": 36,
                    "textAlign": "left",
                  }
                }
              >
                sportPickerModal.header
              </Text>
            </View>
            <View
              height={400.40000000000003}
              style={
                Array [
                  Object {
                    "maxHeight": 400.40000000000003,
                  },
                ]
              }
            >
              <RCTScrollView>
                <View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexBasis": 0,
                          "flexGrow": 1,
                          "flexShrink": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <ActivityIndicator
                      animating={true}
                      color="#009f36"
                      hidesWhenStopped={true}
                      size="large"
                    />
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SportPickerField SportPickerField white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID=""
      >
        <View
          alignItems="stretch"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "stretch",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View
            pointerEvents="none"
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="auto"
              style={
                Object {
                  "width": 380,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                    "borderBottomWidth": 1,
                    "height": 65,
                    "paddingBottom": 14,
                    "paddingTop": 27,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                      "top": 5,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCapitalize="sentences"
                    autoFocus={false}
                    disableFullscreenUI={true}
                    editable={true}
                    error=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    onFocus={[Function]}
                    selectionColor="#fff"
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "margin": 0,
                          "padding": 0,
                          "top": 2,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                          "fontSize": 16,
                          "height": 24,
                          "textAlign": "left",
                        },
                        Object {
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "fontWeight": "normal",
                          "marginTop": 8,
                          "paddingHorizontal": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="sportPickerField.defaultValue"
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "height": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontSize": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#fff",
                          "fontSize": 12,
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            pixels={12}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 12,
                },
              ]
            }
          />
          <View>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 24,
                      "lineHeight": 36,
                      "textAlign": "left",
                    }
                  }
                >
                  sportPickerModal.header
                </Text>
              </View>
              <View
                height={400.40000000000003}
                style={
                  Array [
                    Object {
                      "maxHeight": 400.40000000000003,
                    },
                  ]
                }
              >
                <RCTScrollView>
                  <View>
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexBasis": 0,
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "justifyContent": "center",
                          },
                        ]
                      }
                    >
                      <ActivityIndicator
                        animating={true}
                        color="#009f36"
                        hidesWhenStopped={true}
                        size="large"
                      />
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SportsList SportsList 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <ActivityIndicator
          animating={true}
          color="#009f36"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.SwitchWithText SwitchWithText 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "black",
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 180,
          },
        ]
      }
    >
      <Text>
        false
      </Text>
      <View
        alignItems="center"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            I'm the label
          </Text>
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#777",
                "fontFamily": "Rajdhani-Regular",
                "fontSize": 16,
                "lineHeight": 24,
                "textAlign": "left",
              }
            }
          >
            I'm the description
          </Text>
        </View>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "marginRight": -3,
              },
            ]
          }
        >
          <RCTSwitch
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "height": 31,
                "width": 51,
              }
            }
            thumbTintColor="#e6e6e6"
            value={false}
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Tag Tag error 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        bgColor="negative20"
        borderColor="negative"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(224, 48, 30, 0.2)",
              "borderColor": "#E0301E",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 4,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 4,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          Football
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Tag Tag info 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        bgColor="info20"
        borderColor="info"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(1, 154, 232, 0.2)",
              "borderColor": "#019AE8",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 4,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 4,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          Football
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Tag Tag info long text 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        bgColor="info20"
        borderColor="info"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(1, 154, 232, 0.2)",
              "borderColor": "#019AE8",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 4,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 4,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          Football Football Football Football Football
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Tag Tag success 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        bgColor="grass20"
        borderColor="grass"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0, 159, 54, 0.2)",
              "borderColor": "#009f36",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 4,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 4,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          Football
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Tag Tag warning 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        bgColor="notify20"
        borderColor="notify"
        style={
          Array [
            Object {
              "backgroundColor": "rgba(245, 166, 35, 0.2)",
              "borderColor": "#f5a623",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 4,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 4,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
            }
          }
        >
          Football
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 1)",
              "borderBottomWidth": 0.5,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 31,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 16,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#009f36"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#000",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "height": 65,
              "overflow": "hidden",
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "borderColor": "#000",
                  "borderStyle": "dotted",
                  "borderWidth": 0,
                  "bottom": 0,
                  "left": -0,
                  "right": -0,
                  "top": -0,
                },
              ]
            }
          />
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={false}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#009f36"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "#000",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#777",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#000",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField with MIX theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(255, 255, 255, 1)",
              "borderBottomWidth": 1,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#fff"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 24,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "paddingLeft": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "right",
                  },
                  undefined,
                  Object {
                    "color": "#fff",
                    "fontSize": 12,
                  },
                ]
              }
            >
              13
               / 
              20
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField with WHITE theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(255, 255, 255, 1)",
              "borderBottomWidth": 1,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#fff"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 24,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "paddingLeft": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "right",
                  },
                  undefined,
                  Object {
                    "color": "#fff",
                    "fontSize": 12,
                  },
                ]
              }
            >
              13
               / 
              20
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField with WHITE theme with ERROR 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(200, 0, 0, 0.8)",
              "borderBottomWidth": 1,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              error="I'm the error"
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#fff"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 24,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              >
                I'm the error
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 12,
                    "opacity": 0,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "paddingLeft": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "right",
                  },
                  undefined,
                  Object {
                    "color": "#fff",
                    "fontSize": 12,
                  },
                ]
              }
            >
              13
               / 
              20
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField with characterRestriction = 20 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 1)",
              "borderBottomWidth": 0.5,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#009f36"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 24,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#000",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "paddingLeft": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "right",
                  },
                  undefined,
                  Object {
                    "color": "#000",
                    "fontSize": 12,
                  },
                ]
              }
            >
              13
               / 
              20
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField with error 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="transparent"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(200, 0, 0, 0.8)",
              "borderBottomWidth": 1,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(200, 0, 0, 0.8)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              error="Some error msg"
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#009f36"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 24,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              >
                Some error msg
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#000",
                    "fontSize": 12,
                    "opacity": 0,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.TextField TextField with white theme size ML 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="auto"
        style={
          Object {
            "width": 200,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(255, 255, 255, 1)",
              "borderBottomWidth": 1,
              "height": 65,
              "paddingBottom": 14,
              "paddingTop": 27,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                }
              }
            >
              I'm the label
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              autoCapitalize="sentences"
              autoFocus={false}
              disableFullscreenUI={true}
              editable={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              selectionColor="#fff"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 16,
                    "height": 24,
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 24,
                    "fontWeight": "normal",
                    "marginTop": 8,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="I'm the value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 24,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(200, 0, 0, 0.8)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#fff",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "paddingLeft": 4,
                "paddingVertical": 4,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "right",
                  },
                  undefined,
                  Object {
                    "color": "#fff",
                    "fontSize": 12,
                  },
                ]
              }
            >
              13
               / 
              20
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots DarkFooter DarkFooter NO Back button 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "center",
                    }
                  }
                >
                  DARKFOOTER.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots DarkFooter DarkFooter default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "center",
                    }
                  }
                >
                  DARKFOOTER.BACKBTNLABEL
                </Text>
              </View>
            </View>
          </View>
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "center",
                    }
                  }
                >
                  DARKFOOTER.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots DarkFooterButton DarkFooterButton BACK 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#000",
            "height": 50,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 27,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "center",
              }
            }
          >
            BACK
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots DarkFooterButton DarkFooterButton NEXT 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#000",
            "height": 50,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "center",
              }
            }
          >
            INVITE
          </Text>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 27,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots DarkFooterButton DarkFooterButton NEXT disabled 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#000",
            "height": 50,
          },
        ]
      }
    >
      <View
        onPress={[Function]}
      >
        <View
          alignItems="center"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#777",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "center",
              }
            }
          >
            INVITE
          </Text>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#777",
                  "fontSize": 27,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.AdminMenu AdminMenu 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "gray",
          "flex": 1,
        }
      }
    >
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.Attendees Attendees 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.CancelGameForm CancelGameForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.ClickableAttendees ClickableAttendees 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "black",
            "borderStyle": "solid",
            "borderWidth": 1,
          },
        ]
      }
    />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.DescriptionReadMore DescriptionReadMore 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <Text
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "color": "#000",
            "fontFamily": "Rajdhani-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "textAlign": "left",
          }
        }
      >
        Some description
      </Text>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.DescriptionReadMore DescriptionReadMorelong description 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <Text
        style={
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "color": "#000",
            "fontFamily": "Rajdhani-Regular",
            "fontSize": 16,
            "lineHeight": 24,
            "textAlign": "left",
          }
        }
      >
        Some reaaaally loooong description Some reaaaally loooong description Some reaaaally loooong description Some reaaaally ...
      </Text>
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#f5a623",
              "fontFamily": "Rajdhani-Regular",
              "fontSize": 16,
              "lineHeight": 24,
              "textAlign": "left",
              "textDecorationColor": "#f5a623",
              "textDecorationLine": "underline",
              "textDecorationStyle": "solid",
            }
          }
        >
          descriptionReadMore.readMore
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.EditGameForm EditGameForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameCanceledFlag GameCanceledFlag 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-end"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-end",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#E0301E",
              "borderBottomLeftRadius": 8,
              "borderTopLeftRadius": 8,
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          gameCanceledFlag.text
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameDetails GameDetails CANCELED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View />
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameDetails GameDetails PLANNED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View />
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameListCard GameListCard CANCELED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameListCard GameListCard CANCELED long title/name 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameListCard GameListCard PLANNED 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameListCard GameListCard PLANNED long title/name 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameListCard GameListCard PLANNED short title/name 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GameProperties GameProperties 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GamesList GamesList 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.GamesList GamesList no results 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <NothingFound
          iconName="calendar-plus"
          iconSet="MaterialCommunityIcons"
          text="gamesList.noResults"
        />
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingVertical": 8,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={0.1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshing={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      testID="gamesFlatList"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": "100%",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ccc",
                  "fontSize": 96,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "maxWidth": 270,
                  "width": "100%",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#ccc",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "center",
                }
              }
            >
              gamesList.noResults
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.OpenSpots OpenSpots 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.Organizer Organizer M textSize 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.Organizer Organizer S textSize 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.Organizer Organizer default textSize (SM) 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Games.ShareGameButton ShareGameButton default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Layouts.ClosableLayout ClosableLayout black theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="silver"
      style={
        Array [
          Object {
            "backgroundColor": "#e6e6e6",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 32,
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "left",
            }
          }
        >
          I'm the title
        </Text>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 32,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View>
        <Text>
          I'm the children
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Layouts.ClosableLayout ClosableLayout white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 32,
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "left",
            }
          }
        >
          I'm the title
        </Text>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 32,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View>
        <Text>
          I'm the children
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Layouts.ClosableLayout ClosableLayout white theme NOT closable 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 32,
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "left",
            }
          }
        >
          I'm the title
        </Text>
      </View>
      <View>
        <Text>
          I'm the children
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Layouts.FixedTopLayout FixedTopLayout 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 0.5,
            "borderColor": "#e6e6e6",
            "display": "flex",
            "height": 46,
            "justifyContent": "center",
            "paddingHorizontal": 16,
          },
        ]
      }
    >
      <View>
        <Text>
          I'm in the top layout
        </Text>
      </View>
    </View>
    <RCTScrollView
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View>
        <View>
          <Text>
            I'm in the bottom layout
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Layouts.TopBottomLayout TopBottomLayout black theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View>
        <View>
          <Text>
            I'm in the top layout
          </Text>
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "borderColor": "#e6e6e6",
            "borderTopWidth": 0.5,
            "display": "flex",
            "height": 88,
            "justifyContent": "center",
            "paddingHorizontal": 16,
          },
        ]
      }
    >
      <View>
        <Text>
          I'm in the bottom layout
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.CancelConfirmModal CancelConfirmModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <Text>
                  I'm the child component
                </Text>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="flex-end"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="gray"
                      borderColor="gray"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#777",
                            "borderColor": "#777",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Cancel
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={8}
                    row={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "width": 8,
                        },
                      ]
                    }
                  />
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="grass"
                      borderColor="grass"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#009f36",
                            "borderColor": "#009f36",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.CapacityPickerModal CapacityPickerModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 24,
                      "lineHeight": 36,
                      "textAlign": "left",
                    }
                  }
                >
                  capacityPickerModal.header
                </Text>
              </View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  bgColor="transparent"
                  height={null}
                  midHeight={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                    ]
                  }
                >
                  <View>
                    <View
                      alignItems="stretch"
                      justifyContent="space-between"
                      style={
                        Array [
                          Object {
                            "alignItems": "stretch",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          },
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="grass"
                          borderColor="grass"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#009f36",
                                "borderColor": "#009f36",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#fff",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            2
                          </Text>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            4
                          </Text>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            6
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      pixels={16}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 16,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <View
                      alignItems="stretch"
                      justifyContent="space-between"
                      style={
                        Array [
                          Object {
                            "alignItems": "stretch",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          },
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            9
                          </Text>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            10
                          </Text>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            12
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      pixels={16}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 16,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <View
                      alignItems="stretch"
                      justifyContent="space-between"
                      style={
                        Array [
                          Object {
                            "alignItems": "stretch",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          },
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            14
                          </Text>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            16
                          </Text>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          alignItems="center"
                          bgColor="white"
                          borderColor="darkGray"
                          disabled={false}
                          justifyContent="center"
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#979797",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "display": "flex",
                                "flexDirection": "row",
                                "height": 48,
                                "justifyContent": "center",
                                "minWidth": 80,
                                "width": 80,
                              },
                            ]
                          }
                          width={80}
                        >
                          <Text
                            style={
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "color": "#000",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                                "lineHeight": 27,
                                "textAlign": "left",
                              }
                            }
                          >
                            22
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      pixels={16}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 16,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <View
                      pixels={16}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 16,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <View
                      alignItems="center"
                      justifyContent="flex-start"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "flex-start",
                          },
                        ]
                      }
                    >
                      <View
                        pixels={16}
                        row={true}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": "auto",
                              "width": 16,
                            },
                          ]
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="capacityMinus"
                      >
                        <View
                          bgColor="black"
                          borderColor="black"
                          disabled={false}
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#000",
                                "borderColor": "#000",
                                "borderRadius": 40,
                                "borderStyle": "solid",
                                "borderWidth": 0.3,
                                "height": 40,
                                "justifyContent": "center",
                                "width": 40,
                              },
                            ]
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "color": "#fff",
                                  "fontSize": 24,
                                },
                                undefined,
                                Object {
                                  "fontFamily": "Material Design Icons",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                Object {},
                              ]
                            }
                          >
                            
                          </Text>
                        </View>
                      </View>
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#000",
                            "flexGrow": 1,
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 40,
                            "lineHeight": 60,
                            "textAlign": "center",
                          }
                        }
                      >
                        2
                      </Text>
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="capacityPlus"
                      >
                        <View
                          bgColor="black"
                          borderColor="black"
                          disabled={false}
                          size="M"
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#000",
                                "borderColor": "#000",
                                "borderRadius": 40,
                                "borderStyle": "solid",
                                "borderWidth": 0.3,
                                "height": 40,
                                "justifyContent": "center",
                                "width": 40,
                              },
                            ]
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "color": "#fff",
                                  "fontSize": 24,
                                },
                                undefined,
                                Object {
                                  "fontFamily": "Material Design Icons",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                Object {},
                              ]
                            }
                          >
                            
                          </Text>
                        </View>
                      </View>
                      <View
                        pixels={16}
                        row={true}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": "auto",
                              "width": 16,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="flex-end"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="gray"
                      borderColor="gray"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#777",
                            "borderColor": "#777",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        capacityPickerModal.footer.cancelBtnLabel
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={8}
                    row={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "width": 8,
                        },
                      ]
                    }
                  />
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="grass"
                      borderColor="grass"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#009f36",
                            "borderColor": "#009f36",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        capacityPickerModal.footer.okBtnLabel
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.ConfirmModal ConfirmModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <Text>
                  I'm the child component
                </Text>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="flex-end"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="grass"
                      borderColor="grass"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#009f36",
                            "borderColor": "#009f36",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.DatePickerModal DatePickerModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="space-between"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "color": "#000",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "lineHeight": 36,
                        "textAlign": "left",
                      }
                    }
                  >
                    datePickerModal.header
                  </Text>
                </View>
              </View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  bgColor="transparent"
                  height={null}
                  midHeight={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "paddingLeft": 5,
                          "paddingRight": 5,
                        },
                        Object {},
                      ]
                    }
                  >
                    <View>
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "paddingLeft": 10,
                            "paddingRight": 10,
                          }
                        }
                      >
                        <View
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 20,
                              "left": 20,
                              "right": 20,
                              "top": 20,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "padding": 10,
                            }
                          }
                          testID="native.calendar.CHANGE_MONTH_LEFT_ARROW"
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "color": "#979797",
                                  "fontSize": 24,
                                },
                                undefined,
                                Object {
                                  "fontFamily": "Material Icons",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                Object {},
                              ]
                            }
                          >
                            
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                            }
                          }
                        >
                          <Text
                            accessibilityTraits="header"
                            allowFontScaling={false}
                            style={
                              Object {
                                "color": "#2d4150",
                                "fontFamily": "System",
                                "fontSize": 16,
                                "fontWeight": "300",
                                "margin": 10,
                              }
                            }
                          >
                            January 2017
                          </Text>
                        </View>
                        <View
                          accessible={true}
                          hitSlop={
                            Object {
                              "bottom": 20,
                              "left": 20,
                              "right": 20,
                              "top": 20,
                            }
                          }
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                              "padding": 10,
                            }
                          }
                          testID="native.calendar.CHANGE_MONTH_RIGHT_ARROW"
                        >
                          <Text
                            allowFontScaling={false}
                            style={
                              Array [
                                Object {
                                  "color": "#979797",
                                  "fontSize": 24,
                                },
                                undefined,
                                Object {
                                  "fontFamily": "Material Icons",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                Object {},
                              ]
                            }
                          >
                            
                          </Text>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "space-around",
                            "marginTop": 7,
                          }
                        }
                      >
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Sun
                        </Text>
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Mon
                        </Text>
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Tue
                        </Text>
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Wed
                        </Text>
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Thu
                        </Text>
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Fri
                        </Text>
                        <Text
                          accessible={false}
                          allowFontScaling={false}
                          importantForAccessibility="no"
                          numberOfLines={1}
                          style={
                            Object {
                              "color": "#b6c1cd",
                              "fontFamily": "System",
                              "fontSize": 13,
                              "marginBottom": 7,
                              "marginTop": 2,
                              "textAlign": "center",
                              "width": 32,
                            }
                          }
                        >
                          Sat
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "space-around",
                            "marginBottom": 7,
                            "marginTop": 7,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              1
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              2
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              3
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              4
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              5
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              6
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              7
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "space-around",
                            "marginBottom": 7,
                            "marginTop": 7,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              8
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              9
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              10
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              11
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              12
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              13
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              14
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "space-around",
                            "marginBottom": 7,
                            "marginTop": 7,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              15
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              16
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              17
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              18
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              19
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              20
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              21
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "space-around",
                            "marginBottom": 7,
                            "marginTop": 7,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              22
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              23
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              24
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              25
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              26
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              27
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              28
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "justifyContent": "space-around",
                            "marginBottom": 7,
                            "marginTop": 7,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              29
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              30
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "height": 32,
                                "opacity": 1,
                                "width": 32,
                              }
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(255, 255, 255, 0)",
                                    "color": "#2d4150",
                                    "fontFamily": "System",
                                    "fontSize": 16,
                                    "fontWeight": "300",
                                    "marginTop": 6,
                                  },
                                ]
                              }
                            >
                              31
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        />
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        />
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        />
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="flex-end"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="gray"
                      borderColor="gray"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#777",
                            "borderColor": "#777",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        datePickerModal.footer.cancelBtnLabel
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={8}
                    row={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "width": 8,
                        },
                      ]
                    }
                  />
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="grass"
                      borderColor="grass"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#009f36",
                            "borderColor": "#009f36",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        datePickerModal.footer.okBtnLabel
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.DialogModal DialogModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <Text>
                  I'm the Header
                </Text>
              </View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <Text>
                  I'm the child component
                </Text>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <Text>
                  I'm the footer
                </Text>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.DialogModal DialogModal big children 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <Text>
                  I'm the Header
                </Text>
              </View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "borderColor": "red",
                      "borderWidth": 1,
                      "height": 700,
                    }
                  }
                >
                  <Text>
                    I'm the child component
                  </Text>
                </View>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <Text>
                  I'm the footer
                </Text>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.DialogModal DialogModal big children no header 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "borderColor": "red",
                      "borderWidth": 1,
                      "height": 400,
                    }
                  }
                >
                  <Text>
                    I'm the child component
                  </Text>
                </View>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <Text>
                  I'm the footer
                </Text>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.ImageModal ImageModal CancelConfirmModal comp 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  bgColor="transparent"
                  height={null}
                  midHeight={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Image
                      source={123}
                      style={
                        Array [
                          Object {
                            "height": 120,
                            "width": 116,
                          },
                        ]
                      }
                    />
                    <View
                      pixels={16}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 16,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#000",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "lineHeight": 27,
                          "textAlign": "center",
                        }
                      }
                    >
                      I'm the title
                    </Text>
                    <View
                      pixels={8}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 8,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#000",
                          "fontFamily": "Rajdhani-Regular",
                          "fontSize": 16,
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                      I'm the subtitle
                    </Text>
                  </View>
                </View>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="flex-end"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="gray"
                      borderColor="gray"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#777",
                            "borderColor": "#777",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Cancel
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={8}
                    row={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "width": 8,
                        },
                      ]
                    }
                  />
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="grass"
                      borderColor="grass"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#009f36",
                            "borderColor": "#009f36",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.ImageModal ImageModal ConfirmModal comp 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="grass"
          borderColor="grass"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#009f36",
                "borderColor": "#009f36",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        cancelBtnLabel="Cancel"
        hardwareAccelerated={false}
        onCancel={[Function]}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  bgColor="transparent"
                  height={null}
                  midHeight={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Image
                      source={123}
                      style={
                        Array [
                          Object {
                            "height": 120,
                            "width": 116,
                          },
                        ]
                      }
                    />
                    <View
                      pixels={16}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 16,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#000",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "lineHeight": 27,
                          "textAlign": "center",
                        }
                      }
                    >
                      I'm the title
                    </Text>
                    <View
                      pixels={8}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "height": 8,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#000",
                          "fontFamily": "Rajdhani-Regular",
                          "fontSize": 16,
                          "lineHeight": 24,
                          "textAlign": "center",
                        }
                      }
                    >
                      I'm the subtitle
                    </Text>
                  </View>
                </View>
              </View>
              <View
                row={false}
                style={
                  Array [
                    Object {
                      "borderBottomColor": "#e6e6e6",
                      "borderBottomWidth": 1,
                      "borderRightColor": "rgba(0,0,0,0)",
                      "borderRightWidth": 0,
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
              >
                <View
                  alignItems="center"
                  justifyContent="flex-end"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="grass"
                      borderColor="grass"
                      disabled={false}
                      justifyContent="center"
                      size="S"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#009f36",
                            "borderColor": "#009f36",
                            "borderRadius": 4,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 32,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Ok
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.Modal Modal no footer 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <Text>
              I'm the child component
            </Text>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.Modal Modal no footer big children 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "red",
                  "borderWidth": 1,
                  "height": 400,
                }
              }
            >
              <Text>
                I'm the child component
              </Text>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.Modal Modal no footer overflow children 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "red",
                  "borderWidth": 1,
                  "height": 800,
                }
              }
            >
              <Text>
                I'm the child component
              </Text>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.SportPickerModal SportPickerModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 24,
                      "lineHeight": 36,
                      "textAlign": "left",
                    }
                  }
                >
                  sportPickerModal.header
                </Text>
              </View>
              <View
                height={400.40000000000003}
                style={
                  Array [
                    Object {
                      "maxHeight": 400.40000000000003,
                    },
                  ]
                }
              >
                <RCTScrollView>
                  <View>
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexBasis": 0,
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "justifyContent": "center",
                          },
                        ]
                      }
                    >
                      <ActivityIndicator
                        animating={true}
                        color="#009f36"
                        hidesWhenStopped={true}
                        size="large"
                      />
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Modals.SpotPickerModal SpotPickerModal 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.8)",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#fff",
                  "borderRadius": 4,
                  "display": "flex",
                  "marginBottom": 48,
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": 48,
                  "maxWidth": 320,
                  "width": "90%",
                },
              ]
            }
          >
            <View>
              <View
                bgColor="transparent"
                height={null}
                midHeight={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "paddingBottom": 16,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 24,
                      "lineHeight": 36,
                      "textAlign": "left",
                    }
                  }
                >
                  spotPickerModal.header
                </Text>
              </View>
              <View
                height={null}
                style={
                  Array [
                    Object {
                      "maxHeight": 1142,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#F5F5F5",
                        "paddingBottom": 0,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                        "paddingTop": 0,
                      },
                    ]
                  }
                >
                  <RCTScrollView
                    ItemSeparatorComponent={[Function]}
                    ListEmptyComponent={false}
                    contentContainerStyle={
                      Object {
                        "flexGrow": 1,
                        "paddingVertical": 8,
                      }
                    }
                    data={Array []}
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    loadingLocation={false}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReached={[Function]}
                    onEndReachedThreshold={0.1}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onRefresh={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    refetchLocation={[Function]}
                    refreshControl={
                      <RefreshControlMock
                        onRefresh={[Function]}
                        refreshing={true}
                      />
                    }
                    refreshing={true}
                    renderItem={[Function]}
                    scrollEventThrottle={50}
                    showsVerticalScrollIndicator={false}
                    stickyHeaderIndices={Array []}
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <RCTRefreshControl />
                    <View />
                  </RCTScrollView>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Navigation.StackBackHeader StackBackHeader 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 48,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={8}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 8,
                },
              ]
            }
          />
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Notifications.NotificationCard NotificationCard 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Notifications.NotificationsList NotificationsList 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Notifications.NotificationsList NotificationsList no items 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <NothingFound
          iconName="whistle"
          iconSet="MaterialCommunityIcons"
          text="notificationsList.noResults"
        />
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingVertical": 0,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={0.1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshing={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      testID="notificationsFlatList"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": "100%",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ccc",
                  "fontSize": 96,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            例
          </Text>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "maxWidth": 270,
                  "width": "100%",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#ccc",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "center",
                }
              }
            >
              notificationsList.noResults
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Onboarding.LocationSlide LocationSlide 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={56}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 56,
              "width": "auto",
            },
          ]
        }
      />
      <View>
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "center",
            }
          }
        >
          locationSlide.title
        </Text>
      </View>
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <RCTScrollView>
        <View>
          <View
            bgColor="transparent"
            height={null}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <RCTScrollView
              ItemSeparatorComponent={[Function]}
              contentContainerStyle={
                Object {
                  "flex": 1,
                }
              }
              data={
                Array [
                  Object {
                    "city": "Amsterdam",
                    "coords": Object {
                      "latitude": 52.3547321,
                      "longitude": 4.8284118,
                    },
                    "country": "Netherlands",
                    "id": "amsterdam",
                  },
                  Object {
                    "city": "Enschede",
                    "coords": Object {
                      "latitude": 52.2233632,
                      "longitude": 6.7983365,
                    },
                    "country": "Netherlands",
                    "id": "enschede",
                  },
                  Object {
                    "city": "Rotterdam",
                    "coords": Object {
                      "latitude": 51.9280572,
                      "longitude": 4.420195,
                    },
                    "country": "Netherlands",
                    "id": "rotterdam",
                  },
                  Object {
                    "city": "Buenos Aires",
                    "coords": Object {
                      "latitude": -34.6156624,
                      "longitude": -58.50351,
                    },
                    "country": "Argentina",
                    "id": "buenosAires",
                  },
                ]
              }
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="transparent"
                      borderColor="white"
                      disabled={false}
                      justifyContent="center"
                      size="M"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(0,0,0,0)",
                            "borderColor": "#fff",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 48,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Amsterdam
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={24}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": 24,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="transparent"
                      borderColor="white"
                      disabled={false}
                      justifyContent="center"
                      size="M"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(0,0,0,0)",
                            "borderColor": "#fff",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 48,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Enschede
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={24}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": 24,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="transparent"
                      borderColor="white"
                      disabled={false}
                      justifyContent="center"
                      size="M"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(0,0,0,0)",
                            "borderColor": "#fff",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 48,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Rotterdam
                      </Text>
                    </View>
                  </View>
                  <View
                    pixels={24}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": 24,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                </View>
                <View
                  onLayout={[Function]}
                  style={null}
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      bgColor="transparent"
                      borderColor="white"
                      disabled={false}
                      justifyContent="center"
                      size="M"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "rgba(0,0,0,0)",
                            "borderColor": "#fff",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "display": "flex",
                            "flexDirection": "row",
                            "height": 48,
                            "justifyContent": "center",
                            "minWidth": 80,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    >
                      <Text
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,0)",
                            "color": "#fff",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": 27,
                            "textAlign": "left",
                          }
                        }
                      >
                        Buenos Aires
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Onboarding.NotificationPermissionSlide NotificationPermissionSlide 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={56}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 56,
              "width": "auto",
            },
          ]
        }
      />
      <View>
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "center",
            }
          }
        >
          notificationPermissionSlide.title
        </Text>
      </View>
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <RCTScrollView>
        <View>
          <View
            bgColor="transparent"
            height={null}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-Regular",
                  "fontSize": 16,
                  "lineHeight": 24,
                  "textAlign": "left",
                }
              }
            >
              notificationPermissionSlide.text
            </Text>
            <View
              style={
                Array [
                  Object {
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                  },
                ]
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  alignItems="center"
                  bgColor="transparent"
                  borderColor="white"
                  disabled={false}
                  justifyContent="center"
                  size="M"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(0,0,0,0)",
                        "borderColor": "#fff",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 48,
                        "justifyContent": "center",
                        "minWidth": 80,
                        "width": "100%",
                      },
                    ]
                  }
                  width="100%"
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "lineHeight": 27,
                        "textAlign": "left",
                      }
                    }
                  >
                    notificationPermissionSlide.buttonYes
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  alignItems="center"
                  bgColor="transparent"
                  borderColor="white"
                  disabled={false}
                  justifyContent="center"
                  size="M"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(0,0,0,0)",
                        "borderColor": "#fff",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 48,
                        "justifyContent": "center",
                        "minWidth": 80,
                        "width": "100%",
                      },
                    ]
                  }
                  width="100%"
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "lineHeight": 27,
                        "textAlign": "left",
                      }
                    }
                  >
                    notificationPermissionSlide.buttonNo
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Onboarding.OnboardingForm OnboardingForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.InviteOnly InviteOnly isPrivate 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="center"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#f5a623",
                "fontSize": 48,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={16}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 16,
            },
          ]
        }
      />
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "flexWrap": "wrap",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 24,
              "lineHeight": 36,
              "textAlign": "left",
            }
          }
        >
          inviteOnly.checkboxLabel
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.InviteOnly InviteOnly isPublic 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="center"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 48,
              },
              undefined,
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        pixels={16}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 16,
            },
          ]
        }
      />
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexBasis": 0,
              "flexDirection": "row",
              "flexGrow": 1,
              "flexShrink": 1,
              "flexWrap": "wrap",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#fff",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 24,
              "lineHeight": 36,
              "textAlign": "left",
            }
          }
        >
          inviteOnly.checkboxLabel
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.PlanGameForm PlanGameForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.ShareGameForm ShareGameForm white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      >
        <View
          bgColor="primaryGreen"
          style={
            Array [
              Object {
                "backgroundColor": "#009f36",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "paddingBottom": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 32,
              },
            ]
          }
        >
          <View
            alignItems="center"
            justifyContent="space-between"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "left",
                }
              }
            >
              shareGameScreen.title
            </Text>
          </View>
          <View
            pixels={56}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 56,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 35,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <View
              pixels={16}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 16,
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#fff",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 24,
                  "lineHeight": 36,
                  "textAlign": "left",
                }
              }
            >
              shareGameScreen.invite
            </Text>
          </View>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              bgColor="actionYellow"
              borderColor="actionYellow"
              disabled={false}
              size="XL"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f5a623",
                    "borderColor": "#f5a623",
                    "borderRadius": 58,
                    "borderStyle": "solid",
                    "borderWidth": 0.3,
                    "height": 58,
                    "justifyContent": "center",
                    "width": 58,
                  },
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontSize": 24,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Design Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
          <View
            pixels={56}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 56,
                  "width": "auto",
                },
              ]
            }
          />
        </View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#000",
                "height": 50,
              },
            ]
          }
        >
          <View
            alignItems="center"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          >
            <View
              pixels={4}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 4,
                  },
                ]
              }
            />
            <View
              alignItems="stretch"
              justifyContent="flex-start"
              style={
                Array [
                  Object {
                    "alignItems": "stretch",
                    "display": "flex",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "flex-start",
                  },
                ]
              }
            />
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <View
                  active={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255,255,255,.2)",
                        "borderRadius": 10,
                        "height": 10,
                        "width": 10,
                      },
                    ]
                  }
                />
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
              </View>
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <View
                  active={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255,255,255,.2)",
                        "borderRadius": 10,
                        "height": 10,
                        "width": 10,
                      },
                    ]
                  }
                />
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
              </View>
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <View
                  active={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255,255,255,.2)",
                        "borderRadius": 10,
                        "height": 10,
                        "width": 10,
                      },
                    ]
                  }
                />
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
              </View>
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <View
                  active={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#f5a623",
                        "borderRadius": 10,
                        "height": 10,
                        "width": 10,
                      },
                    ]
                  }
                />
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <View
              alignItems="stretch"
              justifyContent="flex-end"
              style={
                Array [
                  Object {
                    "alignItems": "stretch",
                    "display": "flex",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "flex-end",
                  },
                ]
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="footerNextButton"
              >
                <View
                  alignItems="center"
                  justifyContent="center"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "lineHeight": 27,
                        "textAlign": "center",
                      }
                    }
                  >
                    SHAREGAMESCREEN.FOOTER.NEXTBTNLABEL
                  </Text>
                  <View
                    pixels={4}
                    row={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "width": 4,
                        },
                      ]
                    }
                  />
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "#fff",
                          "fontSize": 27,
                        },
                        undefined,
                        Object {
                          "fontFamily": "Material Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              pixels={4}
              row={true}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": "auto",
                    "width": 4,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.ShareLink ShareLink 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="black34"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0.34)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "flexWrap": "wrap",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#ccc",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "center",
            }
          }
        >
          https://some/link
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.ShareLink ShareLink long link 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="black34"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0.34)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "flexWrap": "wrap",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#ccc",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "center",
            }
          }
        >
          https://some/link/some/link/some/link/some/link/some/link/some/link/some/link/some/link/some/link
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.SpotSlide SpotSlide white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.TitleDescriptionSlide TitleDescriptionSlide white theme 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <RCTScrollView>
        <View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(255, 255, 255, 1)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(255, 255, 255, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  titleDescriptionSlide.fields.title.label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  multiline={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  placeholder="titleDescriptionSlide.fields.title.placeholder"
                  selectionColor="#fff"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 48,
                        "textAlign": "left",
                        "top": -1,
                      },
                      Object {
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 24,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  testID="title"
                  underlineColorAndroid="transparent"
                  value="I'm the title"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#fff",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "paddingLeft": 4,
                    "paddingVertical": 4,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "textAlign": "right",
                      },
                      undefined,
                      Object {
                        "color": "#fff",
                        "fontSize": 12,
                      },
                    ]
                  }
                >
                  13
                   / 
                  80
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            onResponderRelease={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="auto"
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "rgba(255, 255, 255, 1)",
                  "borderBottomWidth": 1,
                  "height": 65,
                  "paddingBottom": 14,
                  "paddingTop": 27,
                }
              }
            >
              <View
                style={
                  Object {
                    "position": "absolute",
                    "top": 5,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Object {
                      "color": "rgba(255, 255, 255, 1)",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                    }
                  }
                >
                  titleDescriptionSlide.fields.description.label
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <TextInput
                  autoCapitalize="sentences"
                  autoFocus={false}
                  disableFullscreenUI={true}
                  editable={true}
                  error=""
                  multiline={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onChangeText={[Function]}
                  onContentSizeChange={[Function]}
                  onFocus={[Function]}
                  placeholder="titleDescriptionSlide.fields.description.placeholder"
                  selectionColor="#fff"
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "margin": 0,
                        "padding": 0,
                        "top": 2,
                      },
                      Object {
                        "color": "rgba(0, 0, 0, .87)",
                        "fontSize": 16,
                        "height": 48,
                        "textAlign": "left",
                        "top": -1,
                      },
                      Object {
                        "color": "#fff",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                        "fontWeight": "normal",
                        "marginTop": 8,
                      },
                    ]
                  }
                  testID="description"
                  underlineColorAndroid="transparent"
                  value="Some random description"
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "height": 24,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 0,
                        "opacity": 0,
                      }
                    }
                  >
                    
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "bottom": 0,
                      "left": 0,
                      "paddingVertical": 4,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#fff",
                        "fontSize": 12,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "paddingLeft": 4,
                    "paddingVertical": 4,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "textAlign": "right",
                      },
                      undefined,
                      Object {
                        "color": "#fff",
                        "fontSize": 12,
                      },
                    ]
                  }
                >
                  23
                   / 
                  2000
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Profile.EditProfileForm EditProfileForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Profile.ProfileDetails ProfileDetails 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Profile.ProfileTabs ProfileTabs 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Profile.UserMenu UserMenu 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "gray",
          "flex": 1,
        }
      }
    >
      <View
        alignItems="stretch"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View />
        <View>
          <View
            collapsable={false}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
            >
              <View
                ctx={
                  Object {
                    "menuActions": Object {
                      "_getOpenedMenu": [Function],
                      "_notify": [Function],
                      "closeMenu": [Function],
                      "isMenuOpen": [Function],
                      "openMenu": [Function],
                      "toggleMenu": [Function],
                    },
                    "menuRegistry": Object {
                      "getAll": [Function],
                      "getMenu": [Function],
                      "setOptionsCustomStyles": [Function],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                      "updateLayoutInfo": [Function],
                    },
                  }
                }
                style={
                  Array [
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  testID=""
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      alignItems="center"
                      justifyContent="center"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "center",
                            "width": 60,
                          },
                        ]
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#000",
                              "fontSize": 32,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Profile.UserSpots UserSpots 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Profile.UserSpots UserSpots no results 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <NothingFound
          iconName="map-marker"
          iconSet="MaterialCommunityIcons"
          text="userSpots.noSpots"
        />
      }
      contentContainerStyle={
        Object {
          "flexGrow": 1,
          "paddingVertical": 16,
        }
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": "100%",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ccc",
                  "fontSize": 96,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={32}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 32,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "maxWidth": 270,
                  "width": "100%",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#ccc",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "center",
                }
              }
            >
              userSpots.noSpots
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screen.Auth CheckEmailScreen LOGIN 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F5F5F5",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Image
            resizeMode="contain"
            style={
              Object {
                "height": 121,
                "width": 121,
              }
            }
          />
        </View>
        <View
          pixels={24}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 24,
                "width": "auto",
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "center",
            }
          }
        >
          checkEmailScreen.login.title
        </Text>
        <View
          pixels={24}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 24,
                "width": "auto",
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "maxWidth": 300,
              "textAlign": "center",
            }
          }
        >
          checkEmailScreen.login.subtitle
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screen.Auth CheckEmailScreen SIGNUP 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#F5F5F5",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Image
            resizeMode="contain"
            style={
              Object {
                "height": 121,
                "width": 121,
              }
            }
          />
        </View>
        <View
          pixels={24}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 24,
                "width": "auto",
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "center",
            }
          }
        >
          checkEmailScreen.signup.title
        </Text>
        <View
          pixels={24}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 24,
                "width": "auto",
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "maxWidth": 300,
              "textAlign": "center",
            }
          }
        >
          checkEmailScreen.signup.subtitle
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screen.Auth ConfirmMagicTokenScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screen.Auth LoginScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "paddingTop": 32,
            },
          ]
        }
      >
        <View
          testID="LoginScreen"
        >
          <View
            bgColor="transparent"
            height={null}
            midHeight={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              onResponderRelease={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="auto"
            >
              <View
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "rgba(0, 0, 0, 1)",
                    "borderBottomWidth": 0.5,
                    "height": 65,
                    "paddingBottom": 14,
                    "paddingTop": 27,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "position": "absolute",
                      "top": 5,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgba(0, 0, 0, 1)",
                        "fontFamily": "Rajdhani-SemiBold",
                        "fontSize": 18,
                      }
                    }
                  >
                    loginEmailForm.fields.email.label
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <TextInput
                    autoCapitalize="sentences"
                    autoFocus={false}
                    disableFullscreenUI={true}
                    editable={true}
                    error=""
                    keyboardType="email-address"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onChangeText={[Function]}
                    onContentSizeChange={[Function]}
                    onFocus={[Function]}
                    placeholder="loginEmailForm.fields.email.placeholder"
                    selectionColor="#009f36"
                    style={
                      Array [
                        Object {
                          "flex": 1,
                          "margin": 0,
                          "padding": 0,
                          "top": 2,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                          "fontSize": 16,
                          "height": 24,
                          "textAlign": "left",
                        },
                        Object {
                          "color": "#000",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 24,
                          "fontWeight": "normal",
                          "marginTop": 8,
                        },
                      ]
                    }
                    testID="loginInputEmail"
                    underlineColorAndroid="transparent"
                    value=""
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "height": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "rgba(200, 0, 0, 0.8)",
                          "fontSize": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "bottom": 0,
                        "left": 0,
                        "paddingVertical": 4,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#000",
                          "fontSize": 12,
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            bgColor="transparent"
            height={null}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="loginSubmitButton"
            >
              <View
                alignItems="center"
                bgColor="grass"
                borderColor="grass"
                disabled={false}
                justifyContent="center"
                size="M"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#009f36",
                      "borderColor": "#009f36",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 80,
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  loginEmailForm.btnLabel
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "paddingBottom": 16,
              "paddingTop": 16,
            },
          ]
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            alignItems="center"
            justifyContent="space-between"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                  "textDecorationColor": "#000",
                  "textDecorationLine": "underline",
                  "textDecorationStyle": "solid",
                }
              }
            >
              loginScreen.signupLink
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screen.Auth SignupEmailScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screen.Auth SignupScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="concrete"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        pixels={24}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 24,
              "width": "auto",
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="white"
          borderColor="silver"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#fff",
                "borderColor": "#e6e6e6",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={16}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 16,
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            signupScreen.googlePlusBtnLabel
          </Text>
        </View>
      </View>
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="facebook"
          borderColor="facebook"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#3B5998",
                "borderColor": "#3B5998",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={16}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 16,
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            signupScreen.facebookBtnLabel
          </Text>
        </View>
      </View>
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <View
        alignItems="center"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          row={false}
          style={
            Array [
              Object {
                "borderBottomColor": "#e6e6e6",
                "borderBottomWidth": 1,
                "borderRightColor": "rgba(0,0,0,0)",
                "borderRightWidth": 0,
                "flexGrow": 1,
              },
            ]
          }
        />
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 18,
              "lineHeight": 27,
              "textAlign": "left",
            }
          }
        >
          orDivider.txt
        </Text>
        <View
          pixels={8}
          row={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "width": 8,
              },
            ]
          }
        />
        <View
          row={false}
          style={
            Array [
              Object {
                "borderBottomColor": "#e6e6e6",
                "borderBottomWidth": 1,
                "borderRightColor": "rgba(0,0,0,0)",
                "borderRightWidth": 0,
                "flexGrow": 1,
              },
            ]
          }
        />
      </View>
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        pixels={8}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": 8,
              "width": "auto",
            },
          ]
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          bgColor="actionYellow"
          borderColor="actionYellow"
          disabled={false}
          justifyContent="center"
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f5a623",
                "borderColor": "#f5a623",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={16}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 16,
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "left",
              }
            }
          >
            signupScreen.emailBtnLabel
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Auth LoggedOutScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="silver"
      style={
        Array [
          Object {
            "backgroundColor": "#e6e6e6",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 32,
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "left",
            }
          }
        >
          
        </Text>
      </View>
      <RCTScrollView
        contentContainerStyle={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                },
              ]
            }
          >
            <Image />
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "left",
                }
              }
            >
              loggedOutScreen.title
            </Text>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              loggedOutScreen.subtitle
            </Text>
          </View>
          <View
            pixels={16}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 16,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="profileButtonSignup"
            >
              <View
                alignItems="center"
                bgColor="actionYellow"
                borderColor="actionYellow"
                disabled={false}
                justifyContent="center"
                size="M"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f5a623",
                      "borderColor": "#f5a623",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 80,
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  loggedOutScreen.signupBtnLabel
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={16}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 16,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                alignItems="center"
                justifyContent="space-between"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                      "textDecorationColor": "#000",
                      "textDecorationLine": "underline",
                      "textDecorationStyle": "solid",
                    }
                  }
                >
                  loggedOutScreen.loginLink
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Auth LoggedOutScreen closable 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="silver"
      style={
        Array [
          Object {
            "backgroundColor": "#e6e6e6",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingBottom": 0,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 32,
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="space-between"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "color": "#000",
              "fontFamily": "Rajdhani-SemiBold",
              "fontSize": 32,
              "lineHeight": 48,
              "textAlign": "left",
            }
          }
        >
          
        </Text>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 32,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                },
              ]
            }
          >
            <Image />
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "left",
                }
              }
            >
              loggedOutScreen.title
            </Text>
            <View
              pixels={32}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 32,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": 27,
                  "textAlign": "left",
                }
              }
            >
              loggedOutScreen.subtitle
            </Text>
          </View>
          <View
            pixels={16}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 16,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="profileButtonSignup"
            >
              <View
                alignItems="center"
                bgColor="actionYellow"
                borderColor="actionYellow"
                disabled={false}
                justifyContent="center"
                size="M"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f5a623",
                      "borderColor": "#f5a623",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 80,
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  loggedOutScreen.signupBtnLabel
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={16}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 16,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                alignItems="center"
                justifyContent="space-between"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                      "textDecorationColor": "#000",
                      "textDecorationLine": "underline",
                      "textDecorationStyle": "solid",
                    }
                  }
                >
                  loggedOutScreen.loginLink
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Debug DebugScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "backgroundColor": "#fff",
        }
      }
    >
      <View>
        <View
          bgColor="transparent"
          height={null}
          midHeight={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": "auto",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              alignItems="center"
              bgColor="actionYellow"
              borderColor="actionYellow"
              disabled={false}
              justifyContent="center"
              size="M"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f5a623",
                    "borderColor": "#f5a623",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "height": 48,
                    "justifyContent": "center",
                    "minWidth": 80,
                    "width": "100%",
                  },
                ]
              }
              width="100%"
            >
              <Text
                style={
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "color": "#fff",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": 27,
                    "textAlign": "left",
                  }
                }
              >
                Back
              </Text>
            </View>
          </View>
          <View
            pixels={8}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 8,
                  "width": "auto",
                },
              ]
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Games CancelGameScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <ActivityIndicator
          animating={true}
          color="#009f36"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Games EditGameScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <ActivityIndicator
          animating={true}
          color="#009f36"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Games GameDetailsScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <ActivityIndicator
          animating={true}
          color="#009f36"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Games GamesListScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#F5F5F5",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "paddingBottom": 0,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 0,
          },
        ]
      }
      testID="GameListScreen"
    >
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={false}
        contentContainerStyle={
          Object {
            "flexGrow": 1,
            "paddingVertical": 8,
          }
        }
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={true}
          />
        }
        refreshing={true}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        testID="gamesFlatList"
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Games PlayersListScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <ActivityIndicator
          animating={true}
          color="#009f36"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Info InfoScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      isWhiteTheme={true}
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <RCTScrollView>
        <View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            alignItems="center"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="88"
              bbWidth="88"
              height={88}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  undefined,
                  false,
                  Object {
                    "flex": 0,
                    "height": 88,
                    "width": 88,
                  },
                ]
              }
              vbHeight={79}
              vbWidth={79}
              version="1.1"
              width={88}
              xmlns="http://www.w3.org/2000/svg"
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    0,
                    0,
                    0,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              >
                <RNSVGGroup
                  fill={null}
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Onboarding"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "stroke",
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M4.8,8.21565038e-15 L74.2,8.21565038e-15 C76.8509668,7.72867568e-15 79,2.1490332 79,4.8 L79,74.2 C79,76.8509668 76.8509668,79 74.2,79 L4.8,79 C2.1490332,79 -2.33988546e-15,76.8509668 -2.66453526e-15,74.2 L0,4.8 C-3.24649801e-16,2.1490332 2.1490332,6.03808982e-15 4.8,5.55111512e-15 Z"
                    fill={
                      Array [
                        0,
                        0.027450980392156862,
                        0.8392156862745098,
                        0.32941176470588235,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-6"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 11 65 11 65 68 14 68z"
                    fill={
                      Array [
                        0,
                        1,
                        1,
                        1,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 45 53 45 53 56 0 56z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-5"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M26 22 79 22 79 33 26 33z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-4"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 11 14 11 14 68 0 68z"
                    fill={
                      Array [
                        0,
                        0.16862745098039217,
                        0.6588235294117647,
                        0.2901960784313726,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M65 11 79 11 79 68 65 68z"
                    fill={
                      Array [
                        0,
                        0.16862745098039217,
                        0.6588235294117647,
                        0.2901960784313726,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-2-Copy-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M0 68 79 68 79 79 0 79z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-2"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 8.21565038e-15 65 8.21565038e-15 65 11 14 11z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M14 68 65 68 65 79 14 79z"
                    fill={
                      Array [
                        0,
                        0.1411764705882353,
                        0.5098039215686274,
                        0.19607843137254902,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    name="Rectangle-3-Copy-3"
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
            <View
              pixels={16}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 16,
                    "width": "auto",
                  },
                ]
              }
            />
            <Text
              style={
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "color": "#000",
                  "fontFamily": "Rajdhani-Bold",
                  "fontSize": 32,
                  "lineHeight": 48,
                  "textAlign": "left",
                }
              }
            >
              SPORTYSPOTS
            </Text>
          </View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
          <Text
            accessible={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#000",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 18,
                "lineHeight": 27,
                "textAlign": "center",
              }
            }
          >
            infoScreen.appVersion 1.3.3 
          </Text>
          <View
            pixels={56}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 56,
                  "width": "auto",
                },
              ]
            }
          />
          <View
            row={false}
            style={
              Array [
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "borderRightColor": "rgba(0,0,0,0)",
                  "borderRightWidth": 0,
                },
              ]
            }
          />
          <View
            bgColor="transparent"
            height={null}
            midHeigh={true}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                alignItems="center"
                justifyContent="space-between"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  infoScreen.feedback
                </Text>
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            row={false}
            style={
              Array [
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "borderRightColor": "rgba(0,0,0,0)",
                  "borderRightWidth": 0,
                },
              ]
            }
          />
          <View
            bgColor="transparent"
            height={null}
            midHeigh={true}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                alignItems="center"
                justifyContent="space-between"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  infoScreen.privacy
                </Text>
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            row={false}
            style={
              Array [
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "borderRightColor": "rgba(0,0,0,0)",
                  "borderRightWidth": 0,
                },
              ]
            }
          />
          <View
            bgColor="transparent"
            height={null}
            midHeigh={true}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                alignItems="center"
                justifyContent="space-between"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  infoScreen.terms
                </Text>
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            row={false}
            style={
              Array [
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "borderRightColor": "rgba(0,0,0,0)",
                  "borderRightWidth": 0,
                },
              ]
            }
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Notifications NotificationsListScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      alignItems="stretch"
      justifyContent="flex-start"
      style={
        Array [
          Object {
            "alignItems": "stretch",
            "backgroundColor": "#fff",
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "flex-start",
          },
        ]
      }
      testID="NotificationsListScreen"
    >
      <View
        pixels={16}
        row={true}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "width": 16,
            },
          ]
        }
      />
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={false}
        contentContainerStyle={
          Object {
            "flexGrow": 1,
            "paddingVertical": 0,
          }
        }
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={true}
          />
        }
        refreshing={true}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        testID="notificationsFlatList"
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Onboarding OnboardingScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Plan PlanGameScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "position": "relative",
            },
            undefined,
          ]
        }
      >
        <RCTScrollView
          automaticallyAdjustContentInsets={false}
          autoplay={false}
          autoplayDirection={true}
          autoplayTimeout={2.5}
          bounces={false}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          contentOffset={
            Object {
              "x": 0,
            }
          }
          disableNextButton={false}
          horizontal={true}
          index={0}
          loadMinimal={false}
          loadMinimalSize={1}
          loop={false}
          onIndexChanged={[Function]}
          onMomentumScrollEnd={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          pagingEnabled={true}
          removeClippedSubviews={true}
          scrollEnabled={false}
          scrollsToTop={false}
          showsButtons={false}
          showsHorizontalScrollIndicator={false}
          showsPagination={false}
          showsVerticalScrollIndicator={false}
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View
                  bgColor="primaryGreen"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#009f36",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 32,
                      },
                    ]
                  }
                >
                  <View
                    alignItems="center"
                    justifyContent="space-between"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 32,
                          "lineHeight": 48,
                          "textAlign": "left",
                        }
                      }
                    >
                      sportDateTimeSlide.title
                    </Text>
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#fff",
                              "fontSize": 32,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                  <RCTScrollView>
                    <View>
                      <View
                        pixels={24}
                        row={false}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": 24,
                              "width": "auto",
                            },
                          ]
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="pickSport"
                      >
                        <View
                          alignItems="stretch"
                          justifyContent="flex-start"
                          style={
                            Array [
                              Object {
                                "alignItems": "stretch",
                                "display": "flex",
                                "flexDirection": "row",
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              sportDateTimeSlide.fields.sport.prefix
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View
                            pointerEvents="none"
                          >
                            <View
                              onResponderRelease={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="auto"
                              style={
                                Object {
                                  "width": 380,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                                    "borderBottomWidth": 1,
                                    "height": 65,
                                    "paddingBottom": 14,
                                    "paddingTop": 27,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "position": "absolute",
                                      "top": 5,
                                    }
                                  }
                                >
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Object {
                                        "color": "rgba(255, 255, 255, 1)",
                                        "fontFamily": "Rajdhani-SemiBold",
                                        "fontSize": 18,
                                      }
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <TextInput
                                    autoCapitalize="sentences"
                                    autoFocus={false}
                                    disableFullscreenUI={true}
                                    editable={true}
                                    error=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onChangeText={[Function]}
                                    onContentSizeChange={[Function]}
                                    onFocus={[Function]}
                                    selectionColor="#fff"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "margin": 0,
                                          "padding": 0,
                                          "top": 2,
                                        },
                                        Object {
                                          "color": "rgba(0, 0, 0, .87)",
                                          "fontSize": 16,
                                          "height": 24,
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "#000",
                                          "fontFamily": "Rajdhani-SemiBold",
                                          "fontSize": 24,
                                          "fontWeight": "normal",
                                          "marginTop": 8,
                                          "paddingHorizontal": 8,
                                          "textAlign": "center",
                                        },
                                      ]
                                    }
                                    underlineColorAndroid="transparent"
                                    value="sportPickerField.defaultValue"
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "height": 8,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "rgba(200, 0, 0, 0.8)",
                                          "fontSize": 0,
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      
                                    </Text>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#fff",
                                          "fontSize": 12,
                                          "opacity": 1,
                                        }
                                      }
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "color": "#fff",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  Object {
                                    "fontFamily": "Material Icons",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              
                            </Text>
                          </View>
                        </View>
                      </View>
                      <Modal
                        animationType="fade"
                        hardwareAccelerated={false}
                        onRequestClose={[Function]}
                        transparent={true}
                        visible={false}
                      >
                        <View
                          accessible={true}
                          isTVSelectable={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "rgba(0, 0, 0, 0.8)",
                              "display": "flex",
                              "flexBasis": 0,
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "justifyContent": "center",
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#fff",
                                  "borderRadius": 4,
                                  "display": "flex",
                                  "marginBottom": 48,
                                  "marginLeft": "auto",
                                  "marginRight": "auto",
                                  "marginTop": 48,
                                  "maxWidth": 320,
                                  "width": "90%",
                                },
                              ]
                            }
                          >
                            <View>
                              <View
                                bgColor="transparent"
                                height={null}
                                midHeight={false}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "rgba(0,0,0,0)",
                                      "height": "auto",
                                      "paddingBottom": 16,
                                      "paddingLeft": 16,
                                      "paddingRight": 16,
                                      "paddingTop": 16,
                                    },
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(0,0,0,0)",
                                      "color": "#000",
                                      "fontFamily": "Rajdhani-SemiBold",
                                      "fontSize": 24,
                                      "lineHeight": 36,
                                      "textAlign": "left",
                                    }
                                  }
                                >
                                  sportPickerModal.header
                                </Text>
                              </View>
                              <View
                                height={400.40000000000003}
                                style={
                                  Array [
                                    Object {
                                      "maxHeight": 400.40000000000003,
                                    },
                                  ]
                                }
                              >
                                <RCTScrollView>
                                  <View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "alignItems": "center",
                                            "flexBasis": 0,
                                            "flexGrow": 1,
                                            "flexShrink": 1,
                                            "justifyContent": "center",
                                          },
                                        ]
                                      }
                                    >
                                      <ActivityIndicator
                                        animating={true}
                                        color="#009f36"
                                        hidesWhenStopped={true}
                                        size="large"
                                      />
                                    </View>
                                  </View>
                                </RCTScrollView>
                              </View>
                            </View>
                          </View>
                        </View>
                      </Modal>
                      <View
                        pixels={4}
                        row={false}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": 4,
                              "width": "auto",
                            },
                          ]
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="pickDate"
                      >
                        <View
                          alignItems="stretch"
                          justifyContent="flex-start"
                          style={
                            Array [
                              Object {
                                "alignItems": "stretch",
                                "display": "flex",
                                "flexDirection": "row",
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              sportDateTimeSlide.fields.date.prefix
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View
                            pointerEvents="none"
                          >
                            <View
                              onResponderRelease={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="auto"
                              style={
                                Object {
                                  "width": 368,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                                    "borderBottomWidth": 1,
                                    "height": 65,
                                    "paddingBottom": 14,
                                    "paddingTop": 27,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "position": "absolute",
                                      "top": 5,
                                    }
                                  }
                                >
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Object {
                                        "color": "rgba(255, 255, 255, 1)",
                                        "fontFamily": "Rajdhani-SemiBold",
                                        "fontSize": 18,
                                      }
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <TextInput
                                    autoCapitalize="sentences"
                                    autoFocus={false}
                                    disableFullscreenUI={true}
                                    editable={true}
                                    error=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onChangeText={[Function]}
                                    onContentSizeChange={[Function]}
                                    onFocus={[Function]}
                                    selectionColor="#fff"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "margin": 0,
                                          "padding": 0,
                                          "top": 2,
                                        },
                                        Object {
                                          "color": "rgba(0, 0, 0, .87)",
                                          "fontSize": 16,
                                          "height": 24,
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "#000",
                                          "fontFamily": "Rajdhani-SemiBold",
                                          "fontSize": 24,
                                          "fontWeight": "normal",
                                          "marginTop": 8,
                                          "paddingHorizontal": 8,
                                          "textAlign": "center",
                                        },
                                      ]
                                    }
                                    underlineColorAndroid="transparent"
                                    value="datePickerField.defaultValue"
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "height": 8,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "rgba(200, 0, 0, 0.8)",
                                          "fontSize": 0,
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      
                                    </Text>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#fff",
                                          "fontSize": 12,
                                          "opacity": 1,
                                        }
                                      }
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "color": "#fff",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  Object {
                                    "fontFamily": "Material Icons",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        pixels={4}
                        row={false}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": 4,
                              "width": "auto",
                            },
                          ]
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="pickTime"
                      >
                        <View
                          alignItems="stretch"
                          justifyContent="flex-start"
                          style={
                            Array [
                              Object {
                                "alignItems": "stretch",
                                "display": "flex",
                                "flexDirection": "row",
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              sportDateTimeSlide.fields.time.prefix
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View
                            pointerEvents="none"
                          >
                            <View
                              onResponderRelease={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="auto"
                              style={
                                Object {
                                  "width": 368,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                                    "borderBottomWidth": 1,
                                    "height": 65,
                                    "paddingBottom": 14,
                                    "paddingTop": 27,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "position": "absolute",
                                      "top": 5,
                                    }
                                  }
                                >
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Object {
                                        "color": "rgba(255, 255, 255, 1)",
                                        "fontFamily": "Rajdhani-SemiBold",
                                        "fontSize": 18,
                                      }
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <TextInput
                                    autoCapitalize="sentences"
                                    autoFocus={false}
                                    disableFullscreenUI={true}
                                    editable={true}
                                    error=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onChangeText={[Function]}
                                    onContentSizeChange={[Function]}
                                    onFocus={[Function]}
                                    selectionColor="#fff"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "margin": 0,
                                          "padding": 0,
                                          "top": 2,
                                        },
                                        Object {
                                          "color": "rgba(0, 0, 0, .87)",
                                          "fontSize": 16,
                                          "height": 24,
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "#000",
                                          "fontFamily": "Rajdhani-SemiBold",
                                          "fontSize": 24,
                                          "fontWeight": "normal",
                                          "marginTop": 8,
                                          "paddingHorizontal": 8,
                                          "textAlign": "center",
                                        },
                                      ]
                                    }
                                    underlineColorAndroid="transparent"
                                    value="timePickerField.defaultValue"
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "height": 8,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "rgba(200, 0, 0, 0.8)",
                                          "fontSize": 0,
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      
                                    </Text>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#fff",
                                          "fontSize": 12,
                                          "opacity": 1,
                                        }
                                      }
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "color": "#fff",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  Object {
                                    "fontFamily": "Material Icons",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              
                            </Text>
                          </View>
                        </View>
                      </View>
                      <Modal
                        animationType="none"
                        hardwareAccelerated={false}
                        hideModalContentWhileAnimating={false}
                        onModalHide={[Function]}
                        onRequestClose={[Function]}
                        scrollOffset={0}
                        scrollOffsetMax={0}
                        scrollTo={null}
                        supportedOrientations={
                          Array [
                            "portrait",
                            "landscape",
                          ]
                        }
                        swipeThreshold={100}
                        transparent={true}
                        visible={false}
                      >
                        <View
                          accessible={true}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "black",
                              "bottom": 0,
                              "height": 1334,
                              "left": 0,
                              "opacity": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                              "width": 750,
                            }
                          }
                        />
                        <View
                          hideModalContentWhileAnimating={false}
                          onModalHide={[Function]}
                          pointerEvents="box-none"
                          scrollOffset={0}
                          scrollOffsetMax={0}
                          scrollTo={null}
                          style={
                            Object {
                              "flex": 1,
                              "justifyContent": "flex-end",
                              "margin": 10,
                              "transform": Array [
                                Object {
                                  "translateY": 0,
                                },
                              ],
                            }
                          }
                          supportedOrientations={
                            Array [
                              "portrait",
                              "landscape",
                            ]
                          }
                          swipeThreshold={100}
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "white",
                                  "borderRadius": 13,
                                  "marginBottom": 8,
                                  "overflow": "hidden",
                                },
                                undefined,
                              ]
                            }
                          >
                            <View
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderBottomColor": "#d5d5d5",
                                  "borderBottomWidth": 0.5,
                                  "padding": 14,
                                }
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#8f8f8f",
                                      "fontSize": 13,
                                      "textAlign": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                Pick a date
                              </Text>
                            </View>
                            <View
                              onStartShouldSetResponderCapture={[Function]}
                            >
                              <View>
                                <RCTDatePicker
                                  date={1554664327076}
                                  minuteInterval={1}
                                  mode="time"
                                  onChange={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "height": 216,
                                    }
                                  }
                                />
                              </View>
                            </View>
                            <View
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#d5d5d5",
                                  "borderTopWidth": 0.5,
                                  "height": 57,
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#007ff9",
                                      "fontSize": 20,
                                      "fontWeight": "normal",
                                      "textAlign": "center",
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                Confirm
                              </Text>
                            </View>
                          </View>
                          <View
                            accessible={true}
                            isTVSelectable={true}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "backgroundColor": "white",
                                "borderRadius": 13,
                                "height": 57,
                                "justifyContent": "center",
                                "marginBottom": 0,
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#007ff9",
                                    "fontSize": 20,
                                    "fontWeight": "600",
                                    "padding": 10,
                                    "textAlign": "center",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              Cancel
                            </Text>
                          </View>
                        </View>
                      </Modal>
                      <View
                        pixels={4}
                        row={false}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": 4,
                              "width": "auto",
                            },
                          ]
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="pickDuration"
                      >
                        <View
                          alignItems="stretch"
                          justifyContent="flex-start"
                          style={
                            Array [
                              Object {
                                "alignItems": "stretch",
                                "display": "flex",
                                "flexDirection": "row",
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              sportDateTimeSlide.fields.duration.prefix
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View
                            pointerEvents="auto"
                          >
                            <View
                              onLayout={[Function]}
                              style={
                                Object {
                                  "width": 380,
                                }
                              }
                            >
                              <View
                                accessible={true}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                              >
                                <View
                                  onResponderRelease={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  pointerEvents="none"
                                >
                                  <View
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "borderBottomColor": "rgba(255, 255, 255, 1)",
                                        "borderBottomWidth": 1,
                                        "height": 65,
                                        "paddingBottom": 14,
                                        "paddingTop": 27,
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "position": "absolute",
                                          "top": 5,
                                        }
                                      }
                                    >
                                      <Text
                                        numberOfLines={1}
                                        style={
                                          Object {
                                            "color": "rgba(255, 255, 255, 1)",
                                            "fontFamily": "Rajdhani-SemiBold",
                                            "fontSize": 18,
                                          }
                                        }
                                      >
                                        
                                      </Text>
                                    </View>
                                    <View
                                      style={
                                        Object {
                                          "flexDirection": "row",
                                        }
                                      }
                                    >
                                      <TextInput
                                        absoluteRTLLayout={false}
                                        autoCapitalize="sentences"
                                        autoFocus={false}
                                        data={
                                          Array [
                                            Object {
                                              "value": "15 durationPickerField.minutes",
                                            },
                                            Object {
                                              "value": "30 durationPickerField.minutes",
                                            },
                                            Object {
                                              "value": "45 durationPickerField.minutes",
                                            },
                                            Object {
                                              "value": "60 durationPickerField.minutes",
                                            },
                                            Object {
                                              "value": "75 durationPickerField.minutes",
                                            },
                                            Object {
                                              "value": "90 durationPickerField.minutes",
                                            },
                                            Object {
                                              "value": "2 durationPickerField.hours",
                                            },
                                            Object {
                                              "value": "2,5 durationPickerField.hours",
                                            },
                                            Object {
                                              "value": "3 durationPickerField.hours",
                                            },
                                            Object {
                                              "value": "4 durationPickerField.hours",
                                            },
                                          ]
                                        }
                                        disableFullscreenUI={true}
                                        dropdownMargins={
                                          Object {
                                            "max": 16,
                                            "min": 8,
                                          }
                                        }
                                        dropdownOffset={
                                          Object {
                                            "left": 16,
                                            "top": 0,
                                          }
                                        }
                                        dropdownPosition={-8}
                                        editable={false}
                                        error=""
                                        itemColor="rgba(0, 0, 0, .54)"
                                        itemCount={8}
                                        itemPadding={8}
                                        labelExtractor={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onChangeText={[Function]}
                                        onContentSizeChange={[Function]}
                                        onFocus={[Function]}
                                        propsExtractor={[Function]}
                                        renderAccessory={[Function]}
                                        rippleDuration={400}
                                        selectionColor="#fff"
                                        shadeOpacity={0.12}
                                        style={
                                          Array [
                                            Object {
                                              "flex": 1,
                                              "margin": 0,
                                              "padding": 0,
                                              "top": 2,
                                            },
                                            Object {
                                              "color": "rgba(0, 0, 0, .87)",
                                              "fontSize": 16,
                                              "height": 24,
                                              "textAlign": "left",
                                            },
                                            Object {
                                              "color": "#000",
                                              "fontFamily": "Rajdhani-SemiBold",
                                              "fontSize": 24,
                                              "fontWeight": "normal",
                                              "marginTop": 8,
                                              "paddingHorizontal": 8,
                                              "textAlign": "center",
                                            },
                                          ]
                                        }
                                        underlineColorAndroid="transparent"
                                        useNativeDriver={false}
                                        value="90 durationPickerField.minutes"
                                        valueExtractor={[Function]}
                                      />
                                      <View
                                        style={
                                          Object {
                                            "alignSelf": "flex-start",
                                            "justifyContent": "center",
                                            "top": 2,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "flexDirection": "row",
                                        "height": 8,
                                      }
                                    }
                                  >
                                    <View
                                      style={
                                        Object {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "flex-start",
                                            "bottom": 0,
                                            "left": 0,
                                            "paddingVertical": 4,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <Text
                                          numberOfLines={1}
                                          style={
                                            Object {
                                              "backgroundColor": "transparent",
                                              "color": "rgba(200, 0, 0, 0.8)",
                                              "fontSize": 0,
                                              "opacity": 0,
                                            }
                                          }
                                        >
                                          
                                        </Text>
                                      </View>
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "flex-start",
                                            "bottom": 0,
                                            "left": 0,
                                            "paddingVertical": 4,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <Text
                                          numberOfLines={1}
                                          style={
                                            Object {
                                              "backgroundColor": "transparent",
                                              "color": "#fff",
                                              "fontSize": 12,
                                              "opacity": 1,
                                            }
                                          }
                                        />
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  accessible={true}
                                  onLayout={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onRippleAnimation={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  pointerEvents="box-only"
                                  rippleCentered={false}
                                  rippleColor="#fff"
                                  rippleDuration={400}
                                  rippleFades={true}
                                  rippleOpacity={0}
                                  rippleSequential={true}
                                  rippleSize={0}
                                  style={
                                    Object {
                                      "height": 48,
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 16,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "bottom": 0,
                                          "left": 0,
                                          "overflow": "hidden",
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        },
                                        Object {
                                          "borderRadius": 0,
                                        },
                                      ]
                                    }
                                  />
                                </View>
                              </View>
                              <Modal
                                hardwareAccelerated={false}
                                onRequestClose={[Function]}
                                supportedOrientations={
                                  Array [
                                    "portrait",
                                    "portrait-upside-down",
                                    "landscape",
                                    "landscape-left",
                                    "landscape-right",
                                  ]
                                }
                                transparent={true}
                                visible={false}
                              >
                                <View
                                  onResponderRelease={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "rgba(255, 255, 255, 1.0)",
                                          "borderRadius": 2,
                                          "position": "absolute",
                                          "shadowColor": "rgba(0, 0, 0, 1.0)",
                                          "shadowOffset": Object {
                                            "height": 2,
                                            "width": 0,
                                          },
                                          "shadowOpacity": 0.54,
                                          "shadowRadius": 2,
                                        },
                                        Object {
                                          "height": 336,
                                          "left": undefined,
                                          "top": undefined,
                                          "transform": Array [
                                            Object {
                                              "translateY": -8,
                                            },
                                          ],
                                          "width": undefined,
                                        },
                                        undefined,
                                      ]
                                    }
                                  >
                                    <RCTScrollView
                                      contentContainerStyle={
                                        Object {
                                          "paddingVertical": 8,
                                        }
                                      }
                                      data={
                                        Array [
                                          Object {
                                            "value": "15 durationPickerField.minutes",
                                          },
                                          Object {
                                            "value": "30 durationPickerField.minutes",
                                          },
                                          Object {
                                            "value": "45 durationPickerField.minutes",
                                          },
                                          Object {
                                            "value": "60 durationPickerField.minutes",
                                          },
                                          Object {
                                            "value": "75 durationPickerField.minutes",
                                          },
                                          Object {
                                            "value": "90 durationPickerField.minutes",
                                          },
                                          Object {
                                            "value": "2 durationPickerField.hours",
                                          },
                                          Object {
                                            "value": "2,5 durationPickerField.hours",
                                          },
                                          Object {
                                            "value": "3 durationPickerField.hours",
                                          },
                                          Object {
                                            "value": "4 durationPickerField.hours",
                                          },
                                        ]
                                      }
                                      disableVirtualization={false}
                                      getItem={[Function]}
                                      getItemCount={[Function]}
                                      horizontal={false}
                                      initialNumToRender={10}
                                      keyExtractor={[Function]}
                                      maxToRenderPerBatch={10}
                                      numColumns={1}
                                      onContentSizeChange={[Function]}
                                      onEndReachedThreshold={2}
                                      onLayout={[Function]}
                                      onMomentumScrollEnd={[Function]}
                                      onScroll={[Function]}
                                      onScrollBeginDrag={[Function]}
                                      onScrollEndDrag={[Function]}
                                      renderItem={[Function]}
                                      scrollEnabled={true}
                                      scrollEventThrottle={50}
                                      stickyHeaderIndices={Array []}
                                      style={
                                        Object {
                                          "borderRadius": 2,
                                          "flex": 1,
                                        }
                                      }
                                      updateCellsBatchingPeriod={50}
                                      viewabilityConfigCallbackPairs={Array []}
                                      windowSize={21}
                                    >
                                      <View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              15 durationPickerField.minutes
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              30 durationPickerField.minutes
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              45 durationPickerField.minutes
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              60 durationPickerField.minutes
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              75 durationPickerField.minutes
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              90 durationPickerField.minutes
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              2 durationPickerField.hours
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              2,5 durationPickerField.hours
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              3 durationPickerField.hours
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                        <View
                                          onLayout={[Function]}
                                          style={null}
                                        >
                                          <View
                                            accessible={true}
                                            focusAnimation={null}
                                            focusAnimationDuration={225}
                                            hitSlop={
                                              Object {
                                                "bottom": 6,
                                                "left": 4,
                                                "right": 4,
                                                "top": 6,
                                              }
                                            }
                                            onLayout={[Function]}
                                            onPress={[Function]}
                                            onPressIn={[Function]}
                                            onPressOut={[Function]}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            pointerEvents="box-only"
                                            rippleCentered={false}
                                            rippleColor="#fff"
                                            rippleDuration={400}
                                            rippleFades={true}
                                            rippleOpacity={0}
                                            rippleSequential={true}
                                            rippleSize={0}
                                            style={
                                              Object {
                                                "backgroundColor": "transparent",
                                                "borderRadius": 0,
                                                "height": 40,
                                                "justifyContent": "center",
                                                "paddingLeft": undefined,
                                                "paddingRight": undefined,
                                                "paddingVertical": 8,
                                              }
                                            }
                                          >
                                            <Text
                                              numberOfLines={1}
                                              style={
                                                Array [
                                                  Object {
                                                    "textAlign": "left",
                                                  },
                                                  undefined,
                                                  Object {
                                                    "color": "rgba(0, 0, 0, .87)",
                                                    "fontSize": 16,
                                                  },
                                                ]
                                              }
                                            >
                                              4 durationPickerField.hours
                                            </Text>
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "#fff",
                                                  "borderRadius": 0,
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "position": "absolute",
                                                  "right": 0,
                                                  "top": 0,
                                                }
                                              }
                                            />
                                            <View
                                              style={
                                                Array [
                                                  Object {
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "absolute",
                                                    "right": 0,
                                                    "top": 0,
                                                  },
                                                  Object {
                                                    "borderRadius": 0,
                                                  },
                                                ]
                                              }
                                            />
                                          </View>
                                        </View>
                                      </View>
                                    </RCTScrollView>
                                  </View>
                                </View>
                              </Modal>
                            </View>
                          </View>
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "color": "#fff",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  Object {
                                    "fontFamily": "Material Icons",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        pixels={4}
                        row={false}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(0,0,0,0)",
                              "height": 4,
                              "width": "auto",
                            },
                          ]
                        }
                      />
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="pickCapacity"
                      >
                        <View
                          alignItems="stretch"
                          justifyContent="flex-start"
                          style={
                            Array [
                              Object {
                                "alignItems": "stretch",
                                "display": "flex",
                                "flexDirection": "row",
                                "justifyContent": "flex-start",
                              },
                            ]
                          }
                        >
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              sportDateTimeSlide.fields.capacity.prefix
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View
                            pointerEvents="none"
                          >
                            <View
                              onResponderRelease={[Function]}
                              onStartShouldSetResponder={[Function]}
                              pointerEvents="auto"
                              style={
                                Object {
                                  "width": 80,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderBottomColor": "rgba(255, 255, 255, 1)",
                                    "borderBottomWidth": 1,
                                    "height": 65,
                                    "paddingBottom": 14,
                                    "paddingTop": 27,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "position": "absolute",
                                      "top": 31,
                                    }
                                  }
                                >
                                  <Text
                                    numberOfLines={1}
                                    style={
                                      Object {
                                        "color": "rgba(255, 255, 255, 1)",
                                        "fontFamily": "Rajdhani-SemiBold",
                                        "fontSize": 16,
                                      }
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "flexDirection": "row",
                                    }
                                  }
                                >
                                  <TextInput
                                    autoCapitalize="sentences"
                                    autoFocus={false}
                                    disableFullscreenUI={true}
                                    editable={true}
                                    error=""
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onChangeText={[Function]}
                                    onContentSizeChange={[Function]}
                                    onFocus={[Function]}
                                    selectionColor="#fff"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "margin": 0,
                                          "padding": 0,
                                          "top": 2,
                                        },
                                        Object {
                                          "color": "rgba(0, 0, 0, .87)",
                                          "fontSize": 16,
                                          "height": 24,
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "#000",
                                          "fontFamily": "Rajdhani-SemiBold",
                                          "fontSize": 24,
                                          "fontWeight": "normal",
                                          "marginTop": 8,
                                          "paddingHorizontal": 8,
                                          "textAlign": "center",
                                        },
                                      ]
                                    }
                                    underlineColorAndroid="transparent"
                                    value=""
                                  />
                                </View>
                              </View>
                              <View
                                style={
                                  Object {
                                    "flexDirection": "row",
                                    "height": 8,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "rgba(200, 0, 0, 0.8)",
                                          "fontSize": 0,
                                          "opacity": 0,
                                        }
                                      }
                                    >
                                      
                                    </Text>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "flex-start",
                                        "bottom": 0,
                                        "left": 0,
                                        "paddingVertical": 4,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <Text
                                      numberOfLines={1}
                                      style={
                                        Object {
                                          "backgroundColor": "transparent",
                                          "color": "#fff",
                                          "fontSize": 12,
                                          "opacity": 1,
                                        }
                                      }
                                    />
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              allowFontScaling={false}
                              style={
                                Array [
                                  Object {
                                    "color": "#fff",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  Object {
                                    "fontFamily": "Material Icons",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            pixels={12}
                            row={true}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "height": "auto",
                                  "width": 12,
                                },
                              ]
                            }
                          />
                          <View>
                            <View
                              pixels={32}
                              row={false}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(0,0,0,0)",
                                    "height": 32,
                                    "width": "auto",
                                  },
                                ]
                              }
                            />
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "rgba(0,0,0,0)",
                                  "color": "#fff",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 24,
                                  "lineHeight": 36,
                                  "textAlign": "left",
                                }
                              }
                            >
                              sportDateTimeSlide.fields.capacity.suffix
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View
                  bgColor="primaryGreen"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#009f36",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 32,
                      },
                    ]
                  }
                >
                  <View
                    alignItems="center"
                    justifyContent="space-between"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 32,
                          "lineHeight": 48,
                          "textAlign": "left",
                        }
                      }
                    >
                      spotSlide.title
                    </Text>
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#fff",
                              "fontSize": 32,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                  <View />
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View
                  bgColor="primaryGreen"
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#009f36",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 32,
                      },
                    ]
                  }
                >
                  <View
                    alignItems="center"
                    justifyContent="space-between"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "color": "#fff",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 32,
                          "lineHeight": 48,
                          "textAlign": "left",
                        }
                      }
                    >
                      titleDescriptionSlide.title
                    </Text>
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        allowFontScaling={false}
                        style={
                          Array [
                            Object {
                              "color": "#fff",
                              "fontSize": 32,
                            },
                            undefined,
                            Object {
                              "fontFamily": "Material Design Icons",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            Object {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                  <View />
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              onPress={[Function]}
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#777",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "center",
                    }
                  }
                >
                  SPORTDATETIMESLIDE.FOOTER.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#777",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Plan PlanGameScreen inputs 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="primaryGreen"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#009f36",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        alignItems="stretch"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "alignItems": "stretch",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID=""
          >
            <View
              alignItems="stretch"
              justifyContent="flex-start"
              style={
                Array [
                  Object {
                    "alignItems": "stretch",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                  },
                ]
              }
            >
              <View>
                <View
                  pixels={32}
                  row={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": 32,
                        "width": "auto",
                      },
                    ]
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
              <View
                pixels={12}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 12,
                    },
                  ]
                }
              />
              <View
                pointerEvents="none"
              >
                <View
                  onResponderRelease={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="auto"
                  style={
                    Object {
                      "width": 368,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                        "borderBottomWidth": 1,
                        "height": 65,
                        "paddingBottom": 14,
                        "paddingTop": 27,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "position": "absolute",
                          "top": 5,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "rgba(200, 0, 0, 0.8)",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                          }
                        }
                      >
                        I'm the label
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <TextInput
                        autoCapitalize="sentences"
                        autoFocus={false}
                        disableFullscreenUI={true}
                        editable={true}
                        error="I'm the error"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onChangeText={[Function]}
                        onContentSizeChange={[Function]}
                        onFocus={[Function]}
                        selectionColor="#009f36"
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "margin": 0,
                              "padding": 0,
                              "top": 2,
                            },
                            Object {
                              "color": "rgba(0, 0, 0, .87)",
                              "fontSize": 16,
                              "height": 24,
                              "textAlign": "left",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 18,
                              "fontWeight": "normal",
                              "marginTop": 8,
                              "paddingHorizontal": 8,
                              "textAlign": "center",
                            },
                          ]
                        }
                        underlineColorAndroid="transparent"
                        value="datePickerField.defaultValue"
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "height": 24,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "rgba(200, 0, 0, 0.8)",
                              "fontSize": 12,
                              "opacity": 1,
                            }
                          }
                        >
                          I'm the error
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "left": 0,
                            "paddingVertical": 4,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <Text
                          numberOfLines={1}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#000",
                              "fontSize": 12,
                              "opacity": 0,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View>
                <View
                  pixels={32}
                  row={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": 32,
                        "width": "auto",
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                pixels={12}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 12,
                    },
                  ]
                }
              />
              <View>
                <View
                  pixels={32}
                  row={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": 32,
                        "width": "auto",
                      },
                    ]
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID=""
          >
            <View
              alignItems="stretch"
              justifyContent="flex-start"
              style={
                Array [
                  Object {
                    "alignItems": "stretch",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                  },
                ]
              }
            >
              <View>
                <View
                  pixels={32}
                  row={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": 32,
                        "width": "auto",
                      },
                    ]
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
              <View
                pixels={12}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 12,
                    },
                  ]
                }
              />
              <View
                pointerEvents="auto"
              >
                <View
                  onLayout={[Function]}
                  style={
                    Object {
                      "width": 380,
                    }
                  }
                >
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 6,
                        "left": 4,
                        "right": 4,
                        "top": 6,
                      }
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    pointerEvents="box-only"
                  >
                    <View
                      onResponderRelease={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="none"
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "borderBottomColor": "rgba(200, 0, 0, 0.8)",
                            "borderBottomWidth": 2,
                            "height": 65,
                            "paddingBottom": 14,
                            "paddingTop": 27,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "position": "absolute",
                              "top": 5,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Object {
                                "color": "rgba(200, 0, 0, 0.8)",
                                "fontFamily": "Rajdhani-SemiBold",
                                "fontSize": 18,
                              }
                            }
                          >
                            I'm the label
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                            }
                          }
                        >
                          <TextInput
                            absoluteRTLLayout={false}
                            autoCapitalize="sentences"
                            autoFocus={false}
                            data={
                              Array [
                                Object {
                                  "value": "15 durationPickerField.minutes",
                                },
                                Object {
                                  "value": "30 durationPickerField.minutes",
                                },
                                Object {
                                  "value": "45 durationPickerField.minutes",
                                },
                                Object {
                                  "value": "60 durationPickerField.minutes",
                                },
                                Object {
                                  "value": "75 durationPickerField.minutes",
                                },
                                Object {
                                  "value": "90 durationPickerField.minutes",
                                },
                                Object {
                                  "value": "2 durationPickerField.hours",
                                },
                                Object {
                                  "value": "2,5 durationPickerField.hours",
                                },
                                Object {
                                  "value": "3 durationPickerField.hours",
                                },
                                Object {
                                  "value": "4 durationPickerField.hours",
                                },
                              ]
                            }
                            disableFullscreenUI={true}
                            dropdownMargins={
                              Object {
                                "max": 16,
                                "min": 8,
                              }
                            }
                            dropdownOffset={
                              Object {
                                "left": 16,
                                "top": 0,
                              }
                            }
                            dropdownPosition={-8}
                            editable={false}
                            error="I'm the error"
                            itemColor="rgba(0, 0, 0, .54)"
                            itemCount={8}
                            itemPadding={8}
                            labelExtractor={[Function]}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onChangeText={[Function]}
                            onContentSizeChange={[Function]}
                            onFocus={[Function]}
                            propsExtractor={[Function]}
                            renderAccessory={[Function]}
                            rippleDuration={400}
                            selectionColor="#009f36"
                            shadeOpacity={0.12}
                            style={
                              Array [
                                Object {
                                  "flex": 1,
                                  "margin": 0,
                                  "padding": 0,
                                  "top": 2,
                                },
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                  "height": 24,
                                  "textAlign": "left",
                                },
                                Object {
                                  "color": "#000",
                                  "fontFamily": "Rajdhani-SemiBold",
                                  "fontSize": 18,
                                  "fontWeight": "normal",
                                  "marginTop": 8,
                                  "paddingHorizontal": 8,
                                  "textAlign": "center",
                                },
                              ]
                            }
                            underlineColorAndroid="transparent"
                            useNativeDriver={false}
                            value="90 durationPickerField.minutes"
                            valueExtractor={[Function]}
                          />
                          <View
                            style={
                              Object {
                                "alignSelf": "flex-start",
                                "justifyContent": "center",
                                "top": 2,
                              }
                            }
                          />
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "flexDirection": "row",
                            "height": 24,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "bottom": 0,
                                "left": 0,
                                "paddingVertical": 4,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "color": "rgba(200, 0, 0, 0.8)",
                                  "fontSize": 12,
                                  "opacity": 1,
                                }
                              }
                            >
                              I'm the error
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "bottom": 0,
                                "left": 0,
                                "paddingVertical": 4,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <Text
                              numberOfLines={1}
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "color": "#000",
                                  "fontSize": 12,
                                  "opacity": 0,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessible={true}
                      onLayout={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onRippleAnimation={[Function]}
                      onStartShouldSetResponder={[Function]}
                      pointerEvents="box-only"
                      rippleCentered={false}
                      rippleColor="#000"
                      rippleDuration={400}
                      rippleFades={true}
                      rippleOpacity={0}
                      rippleSequential={true}
                      rippleSize={0}
                      style={
                        Object {
                          "height": 48,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 16,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "bottom": 0,
                              "left": 0,
                              "overflow": "hidden",
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            },
                            Object {
                              "borderRadius": 0,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <Modal
                    hardwareAccelerated={false}
                    onRequestClose={[Function]}
                    supportedOrientations={
                      Array [
                        "portrait",
                        "portrait-upside-down",
                        "landscape",
                        "landscape-left",
                        "landscape-right",
                      ]
                    }
                    transparent={true}
                    visible={false}
                  >
                    <View
                      onResponderRelease={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <View
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "backgroundColor": "rgba(255, 255, 255, 1.0)",
                              "borderRadius": 2,
                              "position": "absolute",
                              "shadowColor": "rgba(0, 0, 0, 1.0)",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.54,
                              "shadowRadius": 2,
                            },
                            Object {
                              "height": 336,
                              "left": undefined,
                              "top": undefined,
                              "transform": Array [
                                Object {
                                  "translateY": -8,
                                },
                              ],
                              "width": undefined,
                            },
                            undefined,
                          ]
                        }
                      >
                        <RCTScrollView
                          contentContainerStyle={
                            Object {
                              "paddingVertical": 8,
                            }
                          }
                          data={
                            Array [
                              Object {
                                "value": "15 durationPickerField.minutes",
                              },
                              Object {
                                "value": "30 durationPickerField.minutes",
                              },
                              Object {
                                "value": "45 durationPickerField.minutes",
                              },
                              Object {
                                "value": "60 durationPickerField.minutes",
                              },
                              Object {
                                "value": "75 durationPickerField.minutes",
                              },
                              Object {
                                "value": "90 durationPickerField.minutes",
                              },
                              Object {
                                "value": "2 durationPickerField.hours",
                              },
                              Object {
                                "value": "2,5 durationPickerField.hours",
                              },
                              Object {
                                "value": "3 durationPickerField.hours",
                              },
                              Object {
                                "value": "4 durationPickerField.hours",
                              },
                            ]
                          }
                          disableVirtualization={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={10}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          numColumns={1}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          renderItem={[Function]}
                          scrollEnabled={true}
                          scrollEventThrottle={50}
                          stickyHeaderIndices={Array []}
                          style={
                            Object {
                              "borderRadius": 2,
                              "flex": 1,
                            }
                          }
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  15 durationPickerField.minutes
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  30 durationPickerField.minutes
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  45 durationPickerField.minutes
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  60 durationPickerField.minutes
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  75 durationPickerField.minutes
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  90 durationPickerField.minutes
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  2 durationPickerField.hours
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  2,5 durationPickerField.hours
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  3 durationPickerField.hours
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                            <View
                              onLayout={[Function]}
                              style={null}
                            >
                              <View
                                accessible={true}
                                focusAnimation={null}
                                focusAnimationDuration={225}
                                hitSlop={
                                  Object {
                                    "bottom": 6,
                                    "left": 4,
                                    "right": 4,
                                    "top": 6,
                                  }
                                }
                                onLayout={[Function]}
                                onPress={[Function]}
                                onPressIn={[Function]}
                                onPressOut={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                pointerEvents="box-only"
                                rippleCentered={false}
                                rippleColor="#000"
                                rippleDuration={400}
                                rippleFades={true}
                                rippleOpacity={0}
                                rippleSequential={true}
                                rippleSize={0}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderRadius": 0,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "paddingLeft": undefined,
                                    "paddingRight": undefined,
                                    "paddingVertical": 8,
                                  }
                                }
                              >
                                <Text
                                  numberOfLines={1}
                                  style={
                                    Array [
                                      Object {
                                        "textAlign": "left",
                                      },
                                      undefined,
                                      Object {
                                        "color": "rgba(0, 0, 0, .87)",
                                        "fontSize": 16,
                                      },
                                    ]
                                  }
                                >
                                  4 durationPickerField.hours
                                </Text>
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#000",
                                      "borderRadius": 0,
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                />
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "backgroundColor": "transparent",
                                        "bottom": 0,
                                        "left": 0,
                                        "overflow": "hidden",
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      },
                                      Object {
                                        "borderRadius": 0,
                                      },
                                    ]
                                  }
                                />
                              </View>
                            </View>
                          </View>
                        </RCTScrollView>
                      </View>
                    </View>
                  </Modal>
                </View>
              </View>
              <View>
                <View
                  pixels={32}
                  row={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": 32,
                        "width": "auto",
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(200, 0, 0, 0.8)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                pixels={12}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 12,
                    },
                  ]
                }
              />
              <View>
                <View
                  pixels={32}
                  row={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": 32,
                        "width": "auto",
                      },
                    ]
                  }
                />
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#000",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Plan ShareGameScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        bgColor="primaryGreen"
        style={
          Array [
            Object {
              "backgroundColor": "#009f36",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "paddingBottom": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 32,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 32,
                "lineHeight": 48,
                "textAlign": "left",
              }
            }
          >
            shareGameScreen.title
          </Text>
        </View>
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 35,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <View
            pixels={16}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 16,
                },
              ]
            }
          />
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 24,
                "lineHeight": 36,
                "textAlign": "left",
              }
            }
          >
            shareGameScreen.invite
          </Text>
        </View>
        <View
          pixels={32}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 32,
                "width": "auto",
              },
            ]
          }
        />
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            bgColor="actionYellow"
            borderColor="actionYellow"
            disabled={false}
            size="XL"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f5a623",
                  "borderColor": "#f5a623",
                  "borderRadius": 58,
                  "borderStyle": "solid",
                  "borderWidth": 0.3,
                  "height": 58,
                  "justifyContent": "center",
                  "width": 58,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#fff",
                    "fontSize": 24,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Material Design Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "center",
                    }
                  }
                >
                  SHAREGAMESCREEN.FOOTER.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Profile ProfileEditScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Splash SplashScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#009f36",
                "left": 0,
                "position": "absolute",
                "top": 0,
              },
            ]
          }
        >
          <RNSVGSvgView
            bbHeight="1334"
            bbWidth="750"
            height={1334}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                undefined,
                false,
                Object {
                  "flex": 0,
                  "height": 1334,
                  "width": 750,
                },
              ]
            }
            width={750}
          >
            <RNSVGGroup
              fill={
                Array [
                  0,
                  0,
                  0,
                  0,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              font={Object {}}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={Array []}
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            >
              <RNSVGPath
                d="M150 0 h 60 L 120 1334 h -90 Z"
                fill={
                  Array [
                    0,
                    1,
                    1,
                    1,
                    1,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              />
              <RNSVGPath
                d="M0 0 h 750 v 667 L 0 889.3333333333333 Z"
                fill={
                  Array [
                    0,
                    0,
                    0.20784313725490197,
                    0.22745098039215686,
                    0.84,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={0.84}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          alignItems="center"
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="88"
            bbWidth="88"
            height={88}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                undefined,
                false,
                Object {
                  "flex": 0,
                  "height": 88,
                  "width": 88,
                },
              ]
            }
            vbHeight={79}
            vbWidth={79}
            version="1.1"
            width={88}
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={
                Array [
                  0,
                  0,
                  0,
                  0,
                  1,
                ]
              }
              fillOpacity={1}
              fillRule={1}
              font={Object {}}
              matrix={
                Array [
                  1,
                  0,
                  0,
                  1,
                  0,
                  0,
                ]
              }
              opacity={1}
              originX={0}
              originY={0}
              propList={Array []}
              rotation={0}
              scaleX={1}
              scaleY={1}
              skewX={0}
              skewY={0}
              stroke={null}
              strokeDasharray={null}
              strokeDashoffset={null}
              strokeLinecap={0}
              strokeLinejoin={0}
              strokeMiterlimit={4}
              strokeOpacity={1}
              strokeWidth="1"
              x={0}
              y={0}
            >
              <RNSVGGroup
                fill={null}
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                name="Onboarding"
                opacity={1}
                originX={0}
                originY={0}
                propList={
                  Array [
                    "stroke",
                    "fill",
                  ]
                }
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth="1"
                x={0}
                y={0}
              >
                <RNSVGPath
                  d="M4.8,8.21565038e-15 L74.2,8.21565038e-15 C76.8509668,7.72867568e-15 79,2.1490332 79,4.8 L79,74.2 C79,76.8509668 76.8509668,79 74.2,79 L4.8,79 C2.1490332,79 -2.33988546e-15,76.8509668 -2.66453526e-15,74.2 L0,4.8 C-3.24649801e-16,2.1490332 2.1490332,6.03808982e-15 4.8,5.55111512e-15 Z"
                  fill={
                    Array [
                      0,
                      0.027450980392156862,
                      0.8392156862745098,
                      0.32941176470588235,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-6"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M14 11 65 11 65 68 14 68z"
                  fill={
                    Array [
                      0,
                      1,
                      1,
                      1,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M0 45 53 45 53 56 0 56z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-5"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M26 22 79 22 79 33 26 33z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-4"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M0 11 14 11 14 68 0 68z"
                  fill={
                    Array [
                      0,
                      0.16862745098039217,
                      0.6588235294117647,
                      0.2901960784313726,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-2"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M65 11 79 11 79 68 65 68z"
                  fill={
                    Array [
                      0,
                      0.16862745098039217,
                      0.6588235294117647,
                      0.2901960784313726,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-2-Copy-2"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M0 68 79 68 79 79 0 79z"
                  fill={
                    Array [
                      0,
                      0,
                      0,
                      0,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-2"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M14 8.21565038e-15 65 8.21565038e-15 65 11 14 11z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M14 68 65 68 65 79 14 79z"
                  fill={
                    Array [
                      0,
                      0.1411764705882353,
                      0.5098039215686274,
                      0.19607843137254902,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  name="Rectangle-3-Copy-3"
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          pixels={56}
          row={false}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "height": 56,
                "width": "auto",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "flexGrow": 1,
              },
            ]
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "color": "#fff",
                "fontFamily": "Rajdhani-SemiBold",
                "fontSize": 30,
                "lineHeight": 48,
                "textAlign": "center",
              }
            }
            testID="splashText"
          >
            splashScreen.title
          </Text>
          <View
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          />
          <View
            bgColor="transparent"
            height={null}
            midHeight={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <View
              accessibilityLabel="splashScreen.btnLabel"
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="start"
            >
              <View
                alignItems="center"
                bgColor="actionYellow"
                borderColor="actionYellow"
                disabled={false}
                justifyContent="center"
                size="M"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f5a623",
                      "borderColor": "#f5a623",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 80,
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "left",
                    }
                  }
                >
                  splashScreen.btnLabel
                </Text>
              </View>
            </View>
            <View
              pixels={24}
              row={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "rgba(0,0,0,0)",
                    "height": 24,
                    "width": "auto",
                  },
                ]
              }
            />
          </View>
          <View
            pixels={24}
            row={false}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": 24,
                  "width": "auto",
                },
              ]
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Spots SpotsFilterScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <ActivityIndicator
          animating={true}
          color="#009f36"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Spots SpotsListScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
      testID="SpotsListScreen"
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "display": "flex",
            "flex": 1,
            "justifyContent": "center",
          }
        }
        style={
          Array [
            Object {
              "backgroundColor": "#F5F5F5",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ]
        }
      >
        <View>
          <View
            style={
              Array [
                Object {
                  "paddingBottom": 0,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 0,
                },
              ]
            }
          >
            <RCTScrollView
              ItemSeparatorComponent={[Function]}
              ListEmptyComponent={false}
              contentContainerStyle={
                Object {
                  "flexGrow": 1,
                  "paddingVertical": 8,
                }
              }
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              loadingLocation={false}
              maxToRenderPerBatch={10}
              numColumns={1}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={0.1}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refetchLocation={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={true}
                />
              }
              refreshing={true}
              renderItem={[Function]}
              scrollEventThrottle={50}
              showsVerticalScrollIndicator={false}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View />
            </RCTScrollView>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screenslider ScreenSlider 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "position": "relative",
            },
            undefined,
          ]
        }
      >
        <RCTScrollView
          automaticallyAdjustContentInsets={false}
          autoplay={false}
          autoplayDirection={true}
          autoplayTimeout={2.5}
          bounces={false}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          contentOffset={
            Object {
              "x": 0,
            }
          }
          disableNextButton={false}
          horizontal={true}
          index={0}
          loadMinimal={false}
          loadMinimalSize={1}
          loop={false}
          onIndexChanged={[Function]}
          onMomentumScrollEnd={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          pagingEnabled={true}
          removeClippedSubviews={true}
          scrollsToTop={false}
          showsButtons={false}
          showsHorizontalScrollIndicator={false}
          showsPagination={false}
          showsVerticalScrollIndicator={false}
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#f00",
                      "flex": 1,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#0f0",
                      "flex": 1,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#00f",
                      "flex": 1,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "color": "#fff",
                      "fontFamily": "Rajdhani-SemiBold",
                      "fontSize": 18,
                      "lineHeight": 27,
                      "textAlign": "center",
                    }
                  }
                >
                  DARKFOOTER.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(0,0,0,0)",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "rgba(0,0,0,0)",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.BackgroundImage BackgroundImage 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotAmenities SpotAmenities 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotHeader SpotHeader default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotHeader SpotHeader withDistance withGames 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotHeader SpotHeader withDistance withGames gray 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotImage SpotImage 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotLink SpotLink 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotListCard SpotListCard 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotListCardSmall SpotListCardSmall active 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotListCardSmall SpotListCardSmall default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotMap SpotMap 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotPickerField SpotPickerField default 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotsFilterFlap SpotsFilterFlap 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  />
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotsList SpotsList big card 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="silver"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#e6e6e6",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={false}
        contentContainerStyle={
          Object {
            "flexGrow": 1,
            "paddingVertical": 8,
          }
        }
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        loadingLocation={false}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refetchLocation={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={true}
          />
        }
        refreshing={true}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Spots.SpotsList SpotsList small card 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="silver"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "#e6e6e6",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={false}
        contentContainerStyle={
          Object {
            "flexGrow": 1,
            "paddingVertical": 8,
          }
        }
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        loadingLocation={false}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReached={[Function]}
        onEndReachedThreshold={0.1}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onRefresh={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        refetchLocation={[Function]}
        refreshControl={
          <RefreshControlMock
            onRefresh={[Function]}
            refreshing={true}
          />
        }
        refreshing={true}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <RCTRefreshControl />
        <View />
      </RCTScrollView>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Icon Icon primaryGreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#009f36",
            "fontSize": 24,
          },
          undefined,
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Icon Icon size 30 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#000",
            "fontSize": 30,
          },
          undefined,
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text L size 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-SemiBold",
          "fontSize": 32,
          "lineHeight": 48,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text M size 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-SemiBold",
          "fontSize": 18,
          "lineHeight": 27,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text ML size 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-SemiBold",
          "fontSize": 24,
          "lineHeight": 36,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text S size 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-Regular",
          "fontSize": 12,
          "lineHeight": 18,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text XL bold 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-Bold",
          "fontSize": 40,
          "lineHeight": 60,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text XL size 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-SemiBold",
          "fontSize": 40,
          "lineHeight": 60,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text XL size error color 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "rgba(200, 0, 0, 0.8)",
          "fontFamily": "Rajdhani-SemiBold",
          "fontSize": 40,
          "lineHeight": 60,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text default SM size 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-Regular",
          "fontSize": 16,
          "lineHeight": 24,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text default SM size bold 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-Bold",
          "fontSize": 16,
          "lineHeight": 24,
          "textAlign": "left",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text default SM size underline 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-Regular",
          "fontSize": 16,
          "lineHeight": 24,
          "textAlign": "left",
          "textDecorationColor": "#000",
          "textDecorationLine": "underline",
          "textDecorationStyle": "solid",
        }
      }
    >
      I'm the Text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots common.Text Text numberOfLines={1} 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "color": "#000",
          "fontFamily": "Rajdhani-Regular",
          "fontSize": 16,
          "lineHeight": 24,
          "textAlign": "left",
        }
      }
    >
      Some long long really long text Some long long really long text Some long long really long text
    </Text>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;
